// Package models contains the types for schema 'public'.
package models

// GENERATED BY XO. DO NOT EDIT.

import (
	"database/sql/driver"
	"errors"
)

// AppType is the 'app_type' enum type from schema 'public'.
type AppType uint16

const (
	// AppTypeServer is the 'server' AppType.
	AppTypeServer = AppType(1)

	// AppTypeCronjob is the 'cronjob' AppType.
	AppTypeCronjob = AppType(2)
)

// String returns the string value of the AppType.
func (at AppType) String() string {
	var enumVal string

	switch at {
	case AppTypeServer:
		enumVal = "server"

	case AppTypeCronjob:
		enumVal = "cronjob"
	}

	return enumVal
}

// MarshalText marshals AppType into text.
func (at AppType) MarshalText() ([]byte, error) {
	return []byte(at.String()), nil
}

// UnmarshalText unmarshals AppType from text.
func (at *AppType) UnmarshalText(text []byte) error {
	switch string(text) {
	case "server":
		*at = AppTypeServer

	case "cronjob":
		*at = AppTypeCronjob

	default:
		return errors.New("invalid AppType")
	}

	return nil
}

// Value satisfies the sql/driver.Valuer interface for AppType.
func (at AppType) Value() (driver.Value, error) {
	return at.String(), nil
}

// Scan satisfies the database/sql.Scanner interface for AppType.
func (at *AppType) Scan(src interface{}) error {
	buf, ok := src.([]byte)
	if !ok {
		return errors.New("invalid AppType")
	}

	return at.UnmarshalText(buf)
}
