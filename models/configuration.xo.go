// Package models contains the types for schema 'public'.
package models

// GENERATED BY XO. DO NOT EDIT.

import (
	"database/sql"
	"time"
)

// Configuration represents a row from 'public.configurations'.
type Configuration struct {
	EnvironmentID sql.NullInt64 `json:"environment_id"` // environment_id
	Version       int           `json:"version"`        // version
	CreatedAt     time.Time     `json:"created_at"`     // created_at
}

// Environment returns the Environment associated with the Configuration's EnvironmentID (environment_id).
//
// Generated from foreign key 'configurations_environment_id_fkey'.
func (c *Configuration) Environment(db XODB) (*Environment, error) {
	return EnvironmentByID(db, int(c.EnvironmentID.Int64))
}

// ConfigurationByEnvironmentIDVersion retrieves a row from 'public.configurations' as a Configuration.
//
// Generated from index 'configurations_environment_id_version_key'.
func ConfigurationByEnvironmentIDVersion(db XODB, environmentID sql.NullInt64, version int) (*Configuration, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`environment_id, version, created_at ` +
		`FROM public.configurations ` +
		`WHERE environment_id = $1 AND version = $2`

	// run query
	XOLog(sqlstr, environmentID, version)
	c := Configuration{}

	err = db.QueryRow(sqlstr, environmentID, version).Scan(&c.EnvironmentID, &c.Version, &c.CreatedAt)
	if err != nil {
		return nil, err
	}

	return &c, nil
}
