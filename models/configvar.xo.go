// Package models contains the types for schema 'public'.
package models

// GENERATED BY XO. DO NOT EDIT.

import (
	"database/sql"
)

// ConfigVar represents a row from 'public.config_vars'.
type ConfigVar struct {
	EnvironmentID sql.NullInt64 `json:"environment_id"` // environment_id
	Version       int           `json:"version"`        // version
	Name          string        `json:"name"`           // name
	Value         string        `json:"value"`          // value
}

// Environment returns the Environment associated with the ConfigVar's EnvironmentID (environment_id).
//
// Generated from foreign key 'config_vars_environment_id_fkey'.
func (cv *ConfigVar) Environment(db XODB) (*Environment, error) {
	return EnvironmentByID(db, int(cv.EnvironmentID.Int64))
}

// ConfigVarByEnvironmentIDVersionName retrieves a row from 'public.config_vars' as a ConfigVar.
//
// Generated from index 'config_vars_environment_id_version_name_key'.
func ConfigVarByEnvironmentIDVersionName(db XODB, environmentID sql.NullInt64, version int, name string) (*ConfigVar, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`environment_id, version, name, value ` +
		`FROM public.config_vars ` +
		`WHERE environment_id = $1 AND version = $2 AND name = $3`

	// run query
	XOLog(sqlstr, environmentID, version, name)
	cv := ConfigVar{}

	err = db.QueryRow(sqlstr, environmentID, version, name).Scan(&cv.EnvironmentID, &cv.Version, &cv.Name, &cv.Value)
	if err != nil {
		return nil, err
	}

	return &cv, nil
}
