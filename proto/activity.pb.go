// Code generated by protoc-gen-go. DO NOT EDIT.
// source: activity.proto

package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ActivityType int32

const (
	ActivityType_APPLICATION_CREATED   ActivityType = 0
	ActivityType_DEPLOYMENT_STARTED    ActivityType = 1
	ActivityType_DEPLOYMENT_SUCCESS    ActivityType = 2
	ActivityType_DEPLOYMENT_FAILURE    ActivityType = 3
	ActivityType_ENVIRONMENT_CREATED   ActivityType = 4
	ActivityType_ENVIRONMENT_DESTROYED ActivityType = 5
)

var ActivityType_name = map[int32]string{
	0: "APPLICATION_CREATED",
	1: "DEPLOYMENT_STARTED",
	2: "DEPLOYMENT_SUCCESS",
	3: "DEPLOYMENT_FAILURE",
	4: "ENVIRONMENT_CREATED",
	5: "ENVIRONMENT_DESTROYED",
}
var ActivityType_value = map[string]int32{
	"APPLICATION_CREATED":   0,
	"DEPLOYMENT_STARTED":    1,
	"DEPLOYMENT_SUCCESS":    2,
	"DEPLOYMENT_FAILURE":    3,
	"ENVIRONMENT_CREATED":   4,
	"ENVIRONMENT_DESTROYED": 5,
}

func (x ActivityType) String() string {
	return proto1.EnumName(ActivityType_name, int32(x))
}
func (ActivityType) EnumDescriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

type ListActivitiesResponse struct {
	Activities []*Activity `protobuf:"bytes,1,rep,name=activities" json:"activities,omitempty"`
}

func (m *ListActivitiesResponse) Reset()                    { *m = ListActivitiesResponse{} }
func (m *ListActivitiesResponse) String() string            { return proto1.CompactTextString(m) }
func (*ListActivitiesResponse) ProtoMessage()               {}
func (*ListActivitiesResponse) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

func (m *ListActivitiesResponse) GetActivities() []*Activity {
	if m != nil {
		return m.Activities
	}
	return nil
}

type Activity struct {
	Id            int32                      `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Type          ActivityType               `protobuf:"varint,2,opt,name=type,enum=soapbox.ActivityType" json:"type,omitempty"`
	UserId        int32                      `protobuf:"varint,3,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	ApplicationId int32                      `protobuf:"varint,4,opt,name=application_id,json=applicationId" json:"application_id,omitempty"`
	DeploymentId  int32                      `protobuf:"varint,5,opt,name=deployment_id,json=deploymentId" json:"deployment_id,omitempty"`
	EnvironmentId int32                      `protobuf:"varint,6,opt,name=environment_id,json=environmentId" json:"environment_id,omitempty"`
	CreatedAt     *google_protobuf.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
}

func (m *Activity) Reset()                    { *m = Activity{} }
func (m *Activity) String() string            { return proto1.CompactTextString(m) }
func (*Activity) ProtoMessage()               {}
func (*Activity) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{1} }

func (m *Activity) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Activity) GetType() ActivityType {
	if m != nil {
		return m.Type
	}
	return ActivityType_APPLICATION_CREATED
}

func (m *Activity) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *Activity) GetApplicationId() int32 {
	if m != nil {
		return m.ApplicationId
	}
	return 0
}

func (m *Activity) GetDeploymentId() int32 {
	if m != nil {
		return m.DeploymentId
	}
	return 0
}

func (m *Activity) GetEnvironmentId() int32 {
	if m != nil {
		return m.EnvironmentId
	}
	return 0
}

func (m *Activity) GetCreatedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func init() {
	proto1.RegisterType((*ListActivitiesResponse)(nil), "soapbox.ListActivitiesResponse")
	proto1.RegisterType((*Activity)(nil), "soapbox.Activity")
	proto1.RegisterEnum("soapbox.ActivityType", ActivityType_name, ActivityType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Activities service

type ActivitiesClient interface {
	AddActivity(ctx context.Context, in *Activity, opts ...grpc.CallOption) (*Empty, error)
	ListActivities(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ListActivitiesResponse, error)
	ListApplicationActivities(ctx context.Context, in *GetApplicationRequest, opts ...grpc.CallOption) (*ListActivitiesResponse, error)
	ListDeploymentActivities(ctx context.Context, in *GetDeploymentRequest, opts ...grpc.CallOption) (*ListActivitiesResponse, error)
}

type activitiesClient struct {
	cc *grpc.ClientConn
}

func NewActivitiesClient(cc *grpc.ClientConn) ActivitiesClient {
	return &activitiesClient{cc}
}

func (c *activitiesClient) AddActivity(ctx context.Context, in *Activity, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := grpc.Invoke(ctx, "/soapbox.Activities/AddActivity", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *activitiesClient) ListActivities(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ListActivitiesResponse, error) {
	out := new(ListActivitiesResponse)
	err := grpc.Invoke(ctx, "/soapbox.Activities/ListActivities", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *activitiesClient) ListApplicationActivities(ctx context.Context, in *GetApplicationRequest, opts ...grpc.CallOption) (*ListActivitiesResponse, error) {
	out := new(ListActivitiesResponse)
	err := grpc.Invoke(ctx, "/soapbox.Activities/ListApplicationActivities", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *activitiesClient) ListDeploymentActivities(ctx context.Context, in *GetDeploymentRequest, opts ...grpc.CallOption) (*ListActivitiesResponse, error) {
	out := new(ListActivitiesResponse)
	err := grpc.Invoke(ctx, "/soapbox.Activities/ListDeploymentActivities", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Activities service

type ActivitiesServer interface {
	AddActivity(context.Context, *Activity) (*Empty, error)
	ListActivities(context.Context, *Empty) (*ListActivitiesResponse, error)
	ListApplicationActivities(context.Context, *GetApplicationRequest) (*ListActivitiesResponse, error)
	ListDeploymentActivities(context.Context, *GetDeploymentRequest) (*ListActivitiesResponse, error)
}

func RegisterActivitiesServer(s *grpc.Server, srv ActivitiesServer) {
	s.RegisterService(&_Activities_serviceDesc, srv)
}

func _Activities_AddActivity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Activity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ActivitiesServer).AddActivity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/soapbox.Activities/AddActivity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ActivitiesServer).AddActivity(ctx, req.(*Activity))
	}
	return interceptor(ctx, in, info, handler)
}

func _Activities_ListActivities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ActivitiesServer).ListActivities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/soapbox.Activities/ListActivities",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ActivitiesServer).ListActivities(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Activities_ListApplicationActivities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetApplicationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ActivitiesServer).ListApplicationActivities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/soapbox.Activities/ListApplicationActivities",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ActivitiesServer).ListApplicationActivities(ctx, req.(*GetApplicationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Activities_ListDeploymentActivities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDeploymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ActivitiesServer).ListDeploymentActivities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/soapbox.Activities/ListDeploymentActivities",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ActivitiesServer).ListDeploymentActivities(ctx, req.(*GetDeploymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Activities_serviceDesc = grpc.ServiceDesc{
	ServiceName: "soapbox.Activities",
	HandlerType: (*ActivitiesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddActivity",
			Handler:    _Activities_AddActivity_Handler,
		},
		{
			MethodName: "ListActivities",
			Handler:    _Activities_ListActivities_Handler,
		},
		{
			MethodName: "ListApplicationActivities",
			Handler:    _Activities_ListApplicationActivities_Handler,
		},
		{
			MethodName: "ListDeploymentActivities",
			Handler:    _Activities_ListDeploymentActivities_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "activity.proto",
}

func init() { proto1.RegisterFile("activity.proto", fileDescriptor3) }

var fileDescriptor3 = []byte{
	// 490 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0xdf, 0x6e, 0x12, 0x41,
	0x14, 0xc6, 0xd9, 0xe5, 0x9f, 0x1e, 0xca, 0x86, 0x8e, 0x69, 0xbb, 0x25, 0xd1, 0x12, 0x8c, 0x09,
	0x7a, 0x41, 0x23, 0x5e, 0x79, 0xb9, 0xc2, 0x68, 0x36, 0x22, 0x90, 0x61, 0x6b, 0x52, 0x63, 0x24,
	0x5b, 0x66, 0x6c, 0x26, 0x81, 0x9d, 0x91, 0x1d, 0x1a, 0xf7, 0x1d, 0x7c, 0x0b, 0x1f, 0xc5, 0x17,
	0x33, 0xfb, 0x7f, 0xa4, 0x5e, 0xf4, 0x0a, 0xe6, 0xf7, 0x7d, 0xf3, 0x9d, 0x9d, 0x73, 0x0e, 0x58,
	0xfe, 0x5a, 0xf1, 0x3b, 0xae, 0xa2, 0xa1, 0xdc, 0x09, 0x25, 0x50, 0x33, 0x14, 0xbe, 0xbc, 0x11,
	0x3f, 0xbb, 0xed, 0xec, 0x4f, 0xca, 0xbb, 0xc7, 0xbe, 0x94, 0x1b, 0xbe, 0xf6, 0x15, 0x17, 0x41,
	0x86, 0x3a, 0x94, 0xc9, 0x8d, 0x88, 0xb6, 0x2c, 0x50, 0x19, 0xb9, 0xb8, 0x15, 0xe2, 0x76, 0xc3,
	0x2e, 0x93, 0xd3, 0xcd, 0xfe, 0xfb, 0xa5, 0xe2, 0x5b, 0x16, 0x2a, 0x7f, 0x2b, 0x53, 0x43, 0xff,
	0x23, 0x9c, 0x4e, 0x79, 0xa8, 0x9c, 0xb4, 0x26, 0x67, 0x21, 0x61, 0xa1, 0x14, 0x41, 0xc8, 0xd0,
	0x6b, 0x00, 0xbf, 0xa0, 0xb6, 0xd1, 0xab, 0x0e, 0x5a, 0xa3, 0xe3, 0x61, 0xfe, 0x0d, 0xd9, 0x85,
	0x88, 0x68, 0xa6, 0xfe, 0x2f, 0x13, 0x1e, 0xe5, 0x02, 0xb2, 0xc0, 0xe4, 0xd4, 0x36, 0x7a, 0xc6,
	0xa0, 0x4e, 0x4c, 0x4e, 0xd1, 0x4b, 0xa8, 0xa9, 0x48, 0x32, 0xdb, 0xec, 0x19, 0x03, 0x6b, 0x74,
	0x72, 0x2f, 0xc9, 0x8b, 0x24, 0x23, 0x89, 0x05, 0x9d, 0x41, 0x73, 0x1f, 0xb2, 0xdd, 0x8a, 0x53,
	0xbb, 0x9a, 0xdc, 0x6f, 0xc4, 0x47, 0x97, 0xa2, 0x17, 0x60, 0x69, 0xaf, 0x8e, 0xf5, 0x5a, 0xa2,
	0xb7, 0x35, 0xea, 0x52, 0xf4, 0x1c, 0xda, 0x65, 0x27, 0x62, 0x57, 0x3d, 0x71, 0x1d, 0x95, 0x30,
	0xcd, 0x62, 0xc1, 0x1d, 0xdf, 0x89, 0x20, 0x77, 0x35, 0xd2, 0x2c, 0x8d, 0xba, 0x14, 0xbd, 0x05,
	0x58, 0xef, 0x98, 0xaf, 0x18, 0x5d, 0xf9, 0xca, 0x6e, 0xf6, 0x8c, 0x41, 0x6b, 0xd4, 0x1d, 0xa6,
	0x6d, 0x1d, 0xe6, 0x6d, 0x1d, 0x7a, 0x79, 0x5b, 0xc9, 0xe3, 0xcc, 0xed, 0xa8, 0x57, 0xbf, 0x0d,
	0x38, 0xd2, 0x5f, 0x87, 0xce, 0xe0, 0x89, 0xb3, 0x58, 0x4c, 0xdd, 0xb1, 0xe3, 0xb9, 0xf3, 0xd9,
	0x6a, 0x4c, 0xb0, 0xe3, 0xe1, 0x49, 0xa7, 0x82, 0x4e, 0x01, 0x4d, 0xf0, 0x62, 0x3a, 0xbf, 0xfe,
	0x84, 0x67, 0xde, 0x6a, 0xe9, 0x39, 0x24, 0xe6, 0xc6, 0x21, 0xbf, 0x1a, 0x8f, 0xf1, 0x72, 0xd9,
	0x31, 0x0f, 0xf8, 0x7b, 0xc7, 0x9d, 0x5e, 0x11, 0xdc, 0xa9, 0xc6, 0x05, 0xf0, 0xec, 0xb3, 0x4b,
	0xe6, 0xb3, 0x44, 0xc8, 0x0b, 0xd4, 0xd0, 0x39, 0x9c, 0xe8, 0xc2, 0x04, 0x2f, 0x3d, 0x32, 0xbf,
	0xc6, 0x93, 0x4e, 0x7d, 0xf4, 0xc7, 0x04, 0x28, 0xc7, 0x8f, 0x46, 0xd0, 0x72, 0x28, 0x2d, 0xa6,
	0x78, 0x7f, 0xe2, 0x5d, 0xab, 0x40, 0x78, 0x2b, 0x55, 0xd4, 0xaf, 0xa0, 0x31, 0x58, 0xff, 0x2e,
	0x11, 0x3a, 0xf0, 0x74, 0x2f, 0x8a, 0xf3, 0xff, 0xb7, 0xad, 0x5f, 0x41, 0xdf, 0xe0, 0x3c, 0xd1,
	0xca, 0x49, 0x6a, 0x79, 0xcf, 0x8a, 0xfb, 0x1f, 0x98, 0x6e, 0x21, 0xec, 0xc7, 0x9e, 0x85, 0xea,
	0x21, 0xf9, 0x5f, 0xc1, 0x8e, 0xb5, 0x49, 0xb1, 0x03, 0x5a, 0xfc, 0x53, 0x3d, 0xbe, 0x74, 0x3c,
	0x3c, 0xfd, 0x5d, 0xf3, 0x4b, 0x3d, 0x5d, 0x86, 0x46, 0xf2, 0xf3, 0xe6, 0x6f, 0x00, 0x00, 0x00,
	0xff, 0xff, 0xd7, 0xb8, 0x84, 0x8c, 0xc7, 0x03, 0x00, 0x00,
}
