// Code generated by protoc-gen-go. DO NOT EDIT.
// source: application.proto

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	application.proto
	deployment.proto
	environment.proto
	soapbox.proto
	user.proto
	version.proto

It has these top-level messages:
	Application
	ListApplicationResponse
	GetApplicationRequest
	DeployCleanupRequest
	ListDeploymentRequest
	ListDeploymentResponse
	GetDeploymentRequest
	Deployment
	StartDeploymentResponse
	GetDeploymentStatusRequest
	GetDeploymentStatusResponse
	TeardownDeploymentRequest
	ListEnvironmentRequest
	ListEnvironmentResponse
	GetEnvironmentRequest
	Environment
	EnvironmentVariable
	DestroyEnvironmentRequest
	CopyEnvironmentRequest
	Empty
	User
	CreateUserRequest
	GetUserRequest
	LoginUserRequest
	LoginUserResponse
	GetVersionResponse
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type ApplicationType int32

const (
	ApplicationType_SERVER  ApplicationType = 0
	ApplicationType_CRONJOB ApplicationType = 1
)

var ApplicationType_name = map[int32]string{
	0: "SERVER",
	1: "CRONJOB",
}
var ApplicationType_value = map[string]int32{
	"SERVER":  0,
	"CRONJOB": 1,
}

func (x ApplicationType) String() string {
	return proto1.EnumName(ApplicationType_name, int32(x))
}
func (ApplicationType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type CreationState int32

const (
	CreationState_CREATE_INFRASTRUCTURE_WAIT CreationState = 0
	CreationState_SUCCEEDED                  CreationState = 1
	CreationState_FAILED                     CreationState = 2
)

var CreationState_name = map[int32]string{
	0: "CREATE_INFRASTRUCTURE_WAIT",
	1: "SUCCEEDED",
	2: "FAILED",
}
var CreationState_value = map[string]int32{
	"CREATE_INFRASTRUCTURE_WAIT": 0,
	"SUCCEEDED":                  1,
	"FAILED":                     2,
}

func (x CreationState) String() string {
	return proto1.EnumName(CreationState_name, int32(x))
}
func (CreationState) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type Application struct {
	Id                 int32                      `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name               string                     `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Description        string                     `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	ExternalDns        string                     `protobuf:"bytes,4,opt,name=external_dns,json=externalDns" json:"external_dns,omitempty"`
	GithubRepoUrl      string                     `protobuf:"bytes,5,opt,name=github_repo_url,json=githubRepoUrl" json:"github_repo_url,omitempty"`
	DockerfilePath     string                     `protobuf:"bytes,6,opt,name=dockerfile_path,json=dockerfilePath" json:"dockerfile_path,omitempty"`
	EntrypointOverride string                     `protobuf:"bytes,7,opt,name=entrypoint_override,json=entrypointOverride" json:"entrypoint_override,omitempty"`
	Type               ApplicationType            `protobuf:"varint,8,opt,name=type,enum=soapbox.ApplicationType" json:"type,omitempty"`
	CreatedAt          *google_protobuf.Timestamp `protobuf:"bytes,9,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	Slug               string                     `protobuf:"bytes,10,opt,name=slug" json:"slug,omitempty"`
	InternalDns        string                     `protobuf:"bytes,11,opt,name=internal_dns,json=internalDns" json:"internal_dns,omitempty"`
	CreationState      CreationState              `protobuf:"varint,12,opt,name=creation_state,json=creationState,enum=soapbox.CreationState" json:"creation_state,omitempty"`
}

func (m *Application) Reset()                    { *m = Application{} }
func (m *Application) String() string            { return proto1.CompactTextString(m) }
func (*Application) ProtoMessage()               {}
func (*Application) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Application) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Application) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Application) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Application) GetExternalDns() string {
	if m != nil {
		return m.ExternalDns
	}
	return ""
}

func (m *Application) GetGithubRepoUrl() string {
	if m != nil {
		return m.GithubRepoUrl
	}
	return ""
}

func (m *Application) GetDockerfilePath() string {
	if m != nil {
		return m.DockerfilePath
	}
	return ""
}

func (m *Application) GetEntrypointOverride() string {
	if m != nil {
		return m.EntrypointOverride
	}
	return ""
}

func (m *Application) GetType() ApplicationType {
	if m != nil {
		return m.Type
	}
	return ApplicationType_SERVER
}

func (m *Application) GetCreatedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Application) GetSlug() string {
	if m != nil {
		return m.Slug
	}
	return ""
}

func (m *Application) GetInternalDns() string {
	if m != nil {
		return m.InternalDns
	}
	return ""
}

func (m *Application) GetCreationState() CreationState {
	if m != nil {
		return m.CreationState
	}
	return CreationState_CREATE_INFRASTRUCTURE_WAIT
}

type ListApplicationResponse struct {
	Applications []*Application `protobuf:"bytes,1,rep,name=applications" json:"applications,omitempty"`
}

func (m *ListApplicationResponse) Reset()                    { *m = ListApplicationResponse{} }
func (m *ListApplicationResponse) String() string            { return proto1.CompactTextString(m) }
func (*ListApplicationResponse) ProtoMessage()               {}
func (*ListApplicationResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ListApplicationResponse) GetApplications() []*Application {
	if m != nil {
		return m.Applications
	}
	return nil
}

type GetApplicationRequest struct {
	Id int32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *GetApplicationRequest) Reset()                    { *m = GetApplicationRequest{} }
func (m *GetApplicationRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetApplicationRequest) ProtoMessage()               {}
func (*GetApplicationRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *GetApplicationRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type DeployCleanupRequest struct {
	ApplicationName string `protobuf:"bytes,1,opt,name=application_name,json=applicationName" json:"application_name,omitempty"`
	DryRun          bool   `protobuf:"varint,2,opt,name=dry_run,json=dryRun" json:"dry_run,omitempty"`
}

func (m *DeployCleanupRequest) Reset()                    { *m = DeployCleanupRequest{} }
func (m *DeployCleanupRequest) String() string            { return proto1.CompactTextString(m) }
func (*DeployCleanupRequest) ProtoMessage()               {}
func (*DeployCleanupRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *DeployCleanupRequest) GetApplicationName() string {
	if m != nil {
		return m.ApplicationName
	}
	return ""
}

func (m *DeployCleanupRequest) GetDryRun() bool {
	if m != nil {
		return m.DryRun
	}
	return false
}

func init() {
	proto1.RegisterType((*Application)(nil), "soapbox.Application")
	proto1.RegisterType((*ListApplicationResponse)(nil), "soapbox.ListApplicationResponse")
	proto1.RegisterType((*GetApplicationRequest)(nil), "soapbox.GetApplicationRequest")
	proto1.RegisterType((*DeployCleanupRequest)(nil), "soapbox.DeployCleanupRequest")
	proto1.RegisterEnum("soapbox.ApplicationType", ApplicationType_name, ApplicationType_value)
	proto1.RegisterEnum("soapbox.CreationState", CreationState_name, CreationState_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Applications service

type ApplicationsClient interface {
	ListApplications(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ListApplicationResponse, error)
	CreateApplication(ctx context.Context, in *Application, opts ...grpc.CallOption) (*Application, error)
	GetApplication(ctx context.Context, in *GetApplicationRequest, opts ...grpc.CallOption) (*Application, error)
	DeployCleanup(ctx context.Context, in *DeployCleanupRequest, opts ...grpc.CallOption) (*Empty, error)
}

type applicationsClient struct {
	cc *grpc.ClientConn
}

func NewApplicationsClient(cc *grpc.ClientConn) ApplicationsClient {
	return &applicationsClient{cc}
}

func (c *applicationsClient) ListApplications(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ListApplicationResponse, error) {
	out := new(ListApplicationResponse)
	err := grpc.Invoke(ctx, "/soapbox.Applications/ListApplications", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *applicationsClient) CreateApplication(ctx context.Context, in *Application, opts ...grpc.CallOption) (*Application, error) {
	out := new(Application)
	err := grpc.Invoke(ctx, "/soapbox.Applications/CreateApplication", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *applicationsClient) GetApplication(ctx context.Context, in *GetApplicationRequest, opts ...grpc.CallOption) (*Application, error) {
	out := new(Application)
	err := grpc.Invoke(ctx, "/soapbox.Applications/GetApplication", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *applicationsClient) DeployCleanup(ctx context.Context, in *DeployCleanupRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := grpc.Invoke(ctx, "/soapbox.Applications/DeployCleanup", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Applications service

type ApplicationsServer interface {
	ListApplications(context.Context, *Empty) (*ListApplicationResponse, error)
	CreateApplication(context.Context, *Application) (*Application, error)
	GetApplication(context.Context, *GetApplicationRequest) (*Application, error)
	DeployCleanup(context.Context, *DeployCleanupRequest) (*Empty, error)
}

func RegisterApplicationsServer(s *grpc.Server, srv ApplicationsServer) {
	s.RegisterService(&_Applications_serviceDesc, srv)
}

func _Applications_ListApplications_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationsServer).ListApplications(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/soapbox.Applications/ListApplications",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationsServer).ListApplications(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Applications_CreateApplication_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Application)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationsServer).CreateApplication(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/soapbox.Applications/CreateApplication",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationsServer).CreateApplication(ctx, req.(*Application))
	}
	return interceptor(ctx, in, info, handler)
}

func _Applications_GetApplication_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetApplicationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationsServer).GetApplication(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/soapbox.Applications/GetApplication",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationsServer).GetApplication(ctx, req.(*GetApplicationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Applications_DeployCleanup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeployCleanupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationsServer).DeployCleanup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/soapbox.Applications/DeployCleanup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationsServer).DeployCleanup(ctx, req.(*DeployCleanupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Applications_serviceDesc = grpc.ServiceDesc{
	ServiceName: "soapbox.Applications",
	HandlerType: (*ApplicationsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListApplications",
			Handler:    _Applications_ListApplications_Handler,
		},
		{
			MethodName: "CreateApplication",
			Handler:    _Applications_CreateApplication_Handler,
		},
		{
			MethodName: "GetApplication",
			Handler:    _Applications_GetApplication_Handler,
		},
		{
			MethodName: "DeployCleanup",
			Handler:    _Applications_DeployCleanup_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "application.proto",
}

func init() { proto1.RegisterFile("application.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 630 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x93, 0x5f, 0x4f, 0xdb, 0x3a,
	0x18, 0xc6, 0x9b, 0x02, 0x2d, 0x7d, 0xfb, 0x2f, 0xf8, 0x70, 0x0e, 0x51, 0xa4, 0xc3, 0xc9, 0xc9,
	0xc5, 0xe8, 0xd0, 0x54, 0xa4, 0xee, 0x66, 0xbb, 0x98, 0xb4, 0x90, 0x86, 0x0d, 0x84, 0x60, 0x72,
	0xdb, 0x4d, 0xe2, 0x26, 0x0a, 0x8d, 0x29, 0xd1, 0xd2, 0xd8, 0xb3, 0x9d, 0x89, 0x7c, 0xa0, 0x7d,
	0xa6, 0x7d, 0x9d, 0x29, 0x4e, 0x5b, 0xd2, 0xaa, 0x5c, 0xd5, 0x7e, 0xde, 0xa7, 0x6f, 0xec, 0xdf,
	0xf3, 0x1a, 0x0e, 0x02, 0xc6, 0xe2, 0x68, 0x1a, 0xc8, 0x88, 0x26, 0x7d, 0xc6, 0xa9, 0xa4, 0xa8,
	0x2e, 0x68, 0xc0, 0xee, 0xe9, 0x93, 0xd9, 0x5e, 0x2c, 0x0a, 0xdd, 0xfc, 0x6f, 0x46, 0xe9, 0x2c,
	0x26, 0x67, 0x6a, 0x77, 0x9f, 0x3e, 0x9c, 0xc9, 0x68, 0x4e, 0x84, 0x0c, 0xe6, 0xac, 0x30, 0xd8,
	0xbf, 0x77, 0xa0, 0xe9, 0x3c, 0xb7, 0x43, 0x1d, 0xa8, 0x46, 0xa1, 0xa1, 0x59, 0x5a, 0x6f, 0x0f,
	0x57, 0xa3, 0x10, 0x21, 0xd8, 0x4d, 0x82, 0x39, 0x31, 0xaa, 0x96, 0xd6, 0x6b, 0x60, 0xb5, 0x46,
	0x16, 0x34, 0x43, 0x22, 0xa6, 0x3c, 0x62, 0xf9, 0x5f, 0x8c, 0x1d, 0x55, 0x2a, 0x4b, 0xe8, 0x7f,
	0x68, 0x91, 0x27, 0x49, 0x78, 0x12, 0xc4, 0x7e, 0x98, 0x08, 0x63, 0xb7, 0xb0, 0x2c, 0xb5, 0x61,
	0x22, 0xd0, 0x2b, 0xe8, 0xce, 0x22, 0xf9, 0x98, 0xde, 0xfb, 0x9c, 0x30, 0xea, 0xa7, 0x3c, 0x36,
	0xf6, 0x94, 0xab, 0x5d, 0xc8, 0x98, 0x30, 0x3a, 0xe1, 0x31, 0x3a, 0x81, 0x6e, 0x48, 0xa7, 0xdf,
	0x09, 0x7f, 0x88, 0x62, 0xe2, 0xb3, 0x40, 0x3e, 0x1a, 0x35, 0xe5, 0xeb, 0x3c, 0xcb, 0x5f, 0x02,
	0xf9, 0x88, 0xce, 0xe0, 0x2f, 0x92, 0x48, 0x9e, 0x31, 0x1a, 0x25, 0xd2, 0xa7, 0x3f, 0x09, 0xe7,
	0x51, 0x48, 0x8c, 0xba, 0x32, 0xa3, 0xe7, 0xd2, 0xed, 0xa2, 0x82, 0xde, 0xc0, 0xae, 0xcc, 0x18,
	0x31, 0xf6, 0x2d, 0xad, 0xd7, 0x19, 0x18, 0xfd, 0x25, 0xb9, 0x12, 0x8e, 0x71, 0xc6, 0x08, 0x56,
	0x2e, 0xf4, 0x1e, 0x60, 0xca, 0x49, 0x20, 0x49, 0xe8, 0x07, 0xd2, 0x68, 0x58, 0x5a, 0xaf, 0x39,
	0x30, 0xfb, 0x05, 0xde, 0xfe, 0x12, 0x6f, 0x7f, 0xbc, 0xc4, 0x8b, 0x1b, 0x0b, 0xb7, 0x23, 0x73,
	0x86, 0x22, 0x4e, 0x67, 0x06, 0x14, 0x0c, 0xf3, 0x75, 0x4e, 0x28, 0x4a, 0x4a, 0x84, 0x9a, 0x05,
	0xa1, 0xa5, 0x96, 0x13, 0xfa, 0x00, 0x1d, 0xd5, 0x23, 0xa2, 0x89, 0x2f, 0x64, 0x20, 0x89, 0xd1,
	0x52, 0x27, 0xfd, 0x67, 0x75, 0x52, 0x77, 0x51, 0x1e, 0xe5, 0x55, 0xdc, 0x9e, 0x96, 0xb7, 0xf6,
	0x08, 0x8e, 0xae, 0x23, 0x21, 0x4b, 0xb7, 0xc1, 0x44, 0x30, 0x9a, 0x08, 0x82, 0xde, 0x41, 0xab,
	0x34, 0x42, 0xc2, 0xd0, 0xac, 0x9d, 0x5e, 0x73, 0x70, 0xb8, 0x8d, 0x00, 0x5e, 0x73, 0xda, 0x27,
	0xf0, 0xf7, 0x27, 0xb2, 0xde, 0xf3, 0x47, 0x4a, 0x84, 0xdc, 0x9c, 0x1b, 0xfb, 0x0e, 0x0e, 0x87,
	0x84, 0xc5, 0x34, 0x73, 0x63, 0x12, 0x24, 0x29, 0x5b, 0xfa, 0x5e, 0x83, 0x5e, 0x6a, 0xe8, 0xab,
	0xd9, 0xd2, 0xd4, 0xdd, 0xbb, 0x25, 0xfd, 0x26, 0x1f, 0xb3, 0x23, 0xa8, 0x87, 0x3c, 0xf3, 0x79,
	0x9a, 0xa8, 0xe9, 0xdb, 0xc7, 0xb5, 0x90, 0x67, 0x38, 0x4d, 0x4e, 0x4f, 0xa1, 0xbb, 0x91, 0x11,
	0x02, 0xa8, 0x8d, 0x3c, 0xfc, 0xd5, 0xc3, 0x7a, 0x05, 0x35, 0xa1, 0xee, 0xe2, 0xdb, 0x9b, 0xab,
	0xdb, 0x73, 0x5d, 0x3b, 0xbd, 0x82, 0xf6, 0x1a, 0x25, 0x74, 0x0c, 0xa6, 0x8b, 0x3d, 0x67, 0xec,
	0xf9, 0x97, 0x37, 0x17, 0xd8, 0x19, 0x8d, 0xf1, 0xc4, 0x1d, 0x4f, 0xb0, 0xe7, 0x7f, 0x73, 0x2e,
	0xc7, 0x7a, 0x05, 0xb5, 0xa1, 0x31, 0x9a, 0xb8, 0xae, 0xe7, 0x0d, 0xbd, 0xa1, 0xae, 0xe5, 0x8d,
	0x2f, 0x9c, 0xcb, 0x6b, 0x6f, 0xa8, 0x57, 0x07, 0xbf, 0xaa, 0xd0, 0x2a, 0x7d, 0x58, 0xa0, 0x0b,
	0xd0, 0x37, 0x10, 0x0b, 0xd4, 0x59, 0x51, 0xf4, 0xe6, 0x4c, 0x66, 0xa6, 0xb5, 0xda, 0xbf, 0x90,
	0x86, 0x5d, 0x41, 0x0e, 0x1c, 0xa8, 0x43, 0x92, 0xf2, 0x4b, 0xdc, 0x1a, 0x87, 0xb9, 0x55, 0xb5,
	0x2b, 0xe8, 0x33, 0x74, 0xd6, 0x83, 0x41, 0xc7, 0x2b, 0xe7, 0xd6, 0xc4, 0x5e, 0xec, 0xf4, 0x11,
	0xda, 0x6b, 0xc9, 0xa1, 0x7f, 0x57, 0xc6, 0x6d, 0x89, 0x9a, 0x1b, 0x17, 0xb6, 0x2b, 0xe7, 0xf5,
	0xbb, 0xbd, 0xe2, 0x41, 0xd4, 0xd4, 0xcf, 0xdb, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xc2, 0x09,
	0xcb, 0xe5, 0xb1, 0x04, 0x00, 0x00,
}
