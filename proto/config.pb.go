// Code generated by protoc-gen-go. DO NOT EDIT.
// source: config.proto

package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ListConfigurationRequest struct {
	EnvironmentId int32 `protobuf:"varint,1,opt,name=environment_id,json=environmentId" json:"environment_id,omitempty"`
}

func (m *ListConfigurationRequest) Reset()                    { *m = ListConfigurationRequest{} }
func (m *ListConfigurationRequest) String() string            { return proto1.CompactTextString(m) }
func (*ListConfigurationRequest) ProtoMessage()               {}
func (*ListConfigurationRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *ListConfigurationRequest) GetEnvironmentId() int32 {
	if m != nil {
		return m.EnvironmentId
	}
	return 0
}

type ListConfigurationResponse struct {
	Configs []*Configuration `protobuf:"bytes,1,rep,name=configs" json:"configs,omitempty"`
}

func (m *ListConfigurationResponse) Reset()                    { *m = ListConfigurationResponse{} }
func (m *ListConfigurationResponse) String() string            { return proto1.CompactTextString(m) }
func (*ListConfigurationResponse) ProtoMessage()               {}
func (*ListConfigurationResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *ListConfigurationResponse) GetConfigs() []*Configuration {
	if m != nil {
		return m.Configs
	}
	return nil
}

type GetLatestConfigurationRequest struct {
	EnvironmentId int32 `protobuf:"varint,1,opt,name=environment_id,json=environmentId" json:"environment_id,omitempty"`
}

func (m *GetLatestConfigurationRequest) Reset()                    { *m = GetLatestConfigurationRequest{} }
func (m *GetLatestConfigurationRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetLatestConfigurationRequest) ProtoMessage()               {}
func (*GetLatestConfigurationRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *GetLatestConfigurationRequest) GetEnvironmentId() int32 {
	if m != nil {
		return m.EnvironmentId
	}
	return 0
}

type Configuration struct {
	EnvironmentId int32                      `protobuf:"varint,1,opt,name=environment_id,json=environmentId" json:"environment_id,omitempty"`
	Version       int32                      `protobuf:"varint,2,opt,name=version" json:"version,omitempty"`
	CreatedAt     *google_protobuf.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	ConfigVars    []*ConfigVar               `protobuf:"bytes,4,rep,name=config_vars,json=configVars" json:"config_vars,omitempty"`
}

func (m *Configuration) Reset()                    { *m = Configuration{} }
func (m *Configuration) String() string            { return proto1.CompactTextString(m) }
func (*Configuration) ProtoMessage()               {}
func (*Configuration) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *Configuration) GetEnvironmentId() int32 {
	if m != nil {
		return m.EnvironmentId
	}
	return 0
}

func (m *Configuration) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *Configuration) GetCreatedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Configuration) GetConfigVars() []*ConfigVar {
	if m != nil {
		return m.ConfigVars
	}
	return nil
}

type ConfigVar struct {
	Name  string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *ConfigVar) Reset()                    { *m = ConfigVar{} }
func (m *ConfigVar) String() string            { return proto1.CompactTextString(m) }
func (*ConfigVar) ProtoMessage()               {}
func (*ConfigVar) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *ConfigVar) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ConfigVar) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type CreateConfigurationRequest struct {
	EnvironmentId int32        `protobuf:"varint,1,opt,name=environment_id,json=environmentId" json:"environment_id,omitempty"`
	ConfigVars    []*ConfigVar `protobuf:"bytes,2,rep,name=config_vars,json=configVars" json:"config_vars,omitempty"`
}

func (m *CreateConfigurationRequest) Reset()                    { *m = CreateConfigurationRequest{} }
func (m *CreateConfigurationRequest) String() string            { return proto1.CompactTextString(m) }
func (*CreateConfigurationRequest) ProtoMessage()               {}
func (*CreateConfigurationRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

func (m *CreateConfigurationRequest) GetEnvironmentId() int32 {
	if m != nil {
		return m.EnvironmentId
	}
	return 0
}

func (m *CreateConfigurationRequest) GetConfigVars() []*ConfigVar {
	if m != nil {
		return m.ConfigVars
	}
	return nil
}

type DeleteConfigurationRequest struct {
	EnvironmentId int32 `protobuf:"varint,1,opt,name=environment_id,json=environmentId" json:"environment_id,omitempty"`
	Version       int32 `protobuf:"varint,2,opt,name=version" json:"version,omitempty"`
}

func (m *DeleteConfigurationRequest) Reset()                    { *m = DeleteConfigurationRequest{} }
func (m *DeleteConfigurationRequest) String() string            { return proto1.CompactTextString(m) }
func (*DeleteConfigurationRequest) ProtoMessage()               {}
func (*DeleteConfigurationRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

func (m *DeleteConfigurationRequest) GetEnvironmentId() int32 {
	if m != nil {
		return m.EnvironmentId
	}
	return 0
}

func (m *DeleteConfigurationRequest) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func init() {
	proto1.RegisterType((*ListConfigurationRequest)(nil), "soapbox.ListConfigurationRequest")
	proto1.RegisterType((*ListConfigurationResponse)(nil), "soapbox.ListConfigurationResponse")
	proto1.RegisterType((*GetLatestConfigurationRequest)(nil), "soapbox.GetLatestConfigurationRequest")
	proto1.RegisterType((*Configuration)(nil), "soapbox.Configuration")
	proto1.RegisterType((*ConfigVar)(nil), "soapbox.ConfigVar")
	proto1.RegisterType((*CreateConfigurationRequest)(nil), "soapbox.CreateConfigurationRequest")
	proto1.RegisterType((*DeleteConfigurationRequest)(nil), "soapbox.DeleteConfigurationRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Configurations service

type ConfigurationsClient interface {
	ListConfigurations(ctx context.Context, in *ListConfigurationRequest, opts ...grpc.CallOption) (*ListConfigurationResponse, error)
	GetLatestConfiguration(ctx context.Context, in *GetLatestConfigurationRequest, opts ...grpc.CallOption) (*Configuration, error)
	CreateConfiguration(ctx context.Context, in *CreateConfigurationRequest, opts ...grpc.CallOption) (*Configuration, error)
	DeleteConfiguration(ctx context.Context, in *DeleteConfigurationRequest, opts ...grpc.CallOption) (*Empty, error)
}

type configurationsClient struct {
	cc *grpc.ClientConn
}

func NewConfigurationsClient(cc *grpc.ClientConn) ConfigurationsClient {
	return &configurationsClient{cc}
}

func (c *configurationsClient) ListConfigurations(ctx context.Context, in *ListConfigurationRequest, opts ...grpc.CallOption) (*ListConfigurationResponse, error) {
	out := new(ListConfigurationResponse)
	err := grpc.Invoke(ctx, "/soapbox.Configurations/ListConfigurations", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configurationsClient) GetLatestConfiguration(ctx context.Context, in *GetLatestConfigurationRequest, opts ...grpc.CallOption) (*Configuration, error) {
	out := new(Configuration)
	err := grpc.Invoke(ctx, "/soapbox.Configurations/GetLatestConfiguration", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configurationsClient) CreateConfiguration(ctx context.Context, in *CreateConfigurationRequest, opts ...grpc.CallOption) (*Configuration, error) {
	out := new(Configuration)
	err := grpc.Invoke(ctx, "/soapbox.Configurations/CreateConfiguration", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configurationsClient) DeleteConfiguration(ctx context.Context, in *DeleteConfigurationRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := grpc.Invoke(ctx, "/soapbox.Configurations/DeleteConfiguration", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Configurations service

type ConfigurationsServer interface {
	ListConfigurations(context.Context, *ListConfigurationRequest) (*ListConfigurationResponse, error)
	GetLatestConfiguration(context.Context, *GetLatestConfigurationRequest) (*Configuration, error)
	CreateConfiguration(context.Context, *CreateConfigurationRequest) (*Configuration, error)
	DeleteConfiguration(context.Context, *DeleteConfigurationRequest) (*Empty, error)
}

func RegisterConfigurationsServer(s *grpc.Server, srv ConfigurationsServer) {
	s.RegisterService(&_Configurations_serviceDesc, srv)
}

func _Configurations_ListConfigurations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListConfigurationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigurationsServer).ListConfigurations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/soapbox.Configurations/ListConfigurations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigurationsServer).ListConfigurations(ctx, req.(*ListConfigurationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Configurations_GetLatestConfiguration_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetLatestConfigurationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigurationsServer).GetLatestConfiguration(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/soapbox.Configurations/GetLatestConfiguration",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigurationsServer).GetLatestConfiguration(ctx, req.(*GetLatestConfigurationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Configurations_CreateConfiguration_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateConfigurationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigurationsServer).CreateConfiguration(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/soapbox.Configurations/CreateConfiguration",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigurationsServer).CreateConfiguration(ctx, req.(*CreateConfigurationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Configurations_DeleteConfiguration_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteConfigurationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigurationsServer).DeleteConfiguration(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/soapbox.Configurations/DeleteConfiguration",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigurationsServer).DeleteConfiguration(ctx, req.(*DeleteConfigurationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Configurations_serviceDesc = grpc.ServiceDesc{
	ServiceName: "soapbox.Configurations",
	HandlerType: (*ConfigurationsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListConfigurations",
			Handler:    _Configurations_ListConfigurations_Handler,
		},
		{
			MethodName: "GetLatestConfiguration",
			Handler:    _Configurations_GetLatestConfiguration_Handler,
		},
		{
			MethodName: "CreateConfiguration",
			Handler:    _Configurations_CreateConfiguration_Handler,
		},
		{
			MethodName: "DeleteConfiguration",
			Handler:    _Configurations_DeleteConfiguration_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "config.proto",
}

func init() { proto1.RegisterFile("config.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 416 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x52, 0x4d, 0x6b, 0xdb, 0x40,
	0x10, 0xb5, 0x9c, 0xb8, 0x42, 0xe3, 0xda, 0x87, 0x49, 0x09, 0xea, 0x42, 0xa9, 0xbb, 0xa5, 0xc5,
	0x27, 0xa5, 0x38, 0xf4, 0xd0, 0x63, 0x9a, 0x7e, 0x50, 0x70, 0x2f, 0x22, 0xf4, 0x10, 0x08, 0x66,
	0x63, 0x4f, 0x8c, 0xc0, 0xda, 0x55, 0xb5, 0x2b, 0x91, 0xfe, 0xbb, 0xfe, 0xa3, 0xfe, 0x85, 0xc2,
	0xae, 0xa5, 0xda, 0xae, 0x64, 0x0c, 0x3e, 0x69, 0x66, 0x77, 0xde, 0xdb, 0xa7, 0x37, 0x0f, 0x9e,
	0xce, 0x95, 0x7c, 0x48, 0x96, 0x51, 0x96, 0x2b, 0xa3, 0xd0, 0xd7, 0x4a, 0x64, 0xf7, 0xea, 0x91,
	0x0d, 0xd6, 0x85, 0x3b, 0x67, 0x2f, 0x97, 0x4a, 0x2d, 0x57, 0x74, 0x61, 0xbb, 0xfb, 0xe2, 0xe1,
	0xc2, 0x24, 0x29, 0x69, 0x23, 0xd2, 0xcc, 0x0d, 0xf0, 0x2b, 0x08, 0xa7, 0x89, 0x36, 0xd7, 0x96,
	0xac, 0xc8, 0x85, 0x49, 0x94, 0x8c, 0xe9, 0x67, 0x41, 0xda, 0xe0, 0x1b, 0x18, 0x92, 0x2c, 0x93,
	0x5c, 0xc9, 0x94, 0xa4, 0x99, 0x25, 0x8b, 0xd0, 0x1b, 0x79, 0xe3, 0x5e, 0x3c, 0xd8, 0x38, 0xfd,
	0xb6, 0xe0, 0xdf, 0xe1, 0x79, 0x03, 0x85, 0xce, 0x94, 0xd4, 0x84, 0xef, 0xc0, 0x77, 0x42, 0x75,
	0xe8, 0x8d, 0x4e, 0xc6, 0xfd, 0xc9, 0x79, 0x54, 0x29, 0xdc, 0x06, 0x54, 0x63, 0xfc, 0x0b, 0xbc,
	0xf8, 0x4a, 0x66, 0x2a, 0x0c, 0x1d, 0x27, 0xeb, 0xb7, 0x07, 0x83, 0x2d, 0xfc, 0x81, 0x40, 0x0c,
	0xc1, 0x2f, 0x29, 0xd7, 0x89, 0x92, 0x61, 0xd7, 0xde, 0x57, 0x2d, 0x7e, 0x00, 0x98, 0xe7, 0x24,
	0x0c, 0x2d, 0x66, 0xc2, 0x84, 0x27, 0x23, 0x6f, 0xdc, 0x9f, 0xb0, 0xc8, 0x59, 0x1c, 0x55, 0x16,
	0x47, 0x37, 0x95, 0xc5, 0x71, 0xb0, 0x9e, 0xbe, 0x32, 0x78, 0x09, 0x7d, 0xf7, 0x83, 0xb3, 0x52,
	0xe4, 0x3a, 0x3c, 0xb5, 0x5e, 0xe0, 0x8e, 0x17, 0x3f, 0x44, 0x1e, 0xc3, 0xbc, 0x2a, 0x35, 0x7f,
	0x0f, 0x41, 0x7d, 0x81, 0x08, 0xa7, 0x52, 0xa4, 0x64, 0x35, 0x07, 0xb1, 0xad, 0xf1, 0x19, 0xf4,
	0x4a, 0xb1, 0x2a, 0xc8, 0x0a, 0x0d, 0x62, 0xd7, 0xf0, 0x47, 0x60, 0xd7, 0xf6, 0xe1, 0x23, 0xec,
	0xdb, 0x15, 0xdc, 0x3d, 0x48, 0xf0, 0x1d, 0xb0, 0x4f, 0xb4, 0xa2, 0xe3, 0x5e, 0x6e, 0xf5, 0x7f,
	0xf2, 0xa7, 0x0b, 0xc3, 0x2d, 0x66, 0x8d, 0x77, 0x80, 0xff, 0x85, 0x4f, 0xe3, 0xab, 0x5a, 0x67,
	0x5b, 0xb8, 0x19, 0xdf, 0x37, 0xe2, 0xc2, 0xcb, 0x3b, 0x78, 0x0b, 0xe7, 0xcd, 0x61, 0xc4, 0xb7,
	0x35, 0x7e, 0x6f, 0x5a, 0x59, 0x4b, 0xde, 0x79, 0x07, 0x6f, 0xe0, 0xac, 0x61, 0x4d, 0xf8, 0xfa,
	0x1f, 0xa0, 0x75, 0x89, 0x7b, 0x58, 0xa7, 0x70, 0xd6, 0xb0, 0x82, 0x0d, 0xd6, 0xf6, 0x05, 0xb1,
	0x61, 0x3d, 0xf4, 0x39, 0xcd, 0xcc, 0x2f, 0xde, 0xf9, 0xe8, 0xdf, 0xf6, 0x5c, 0xae, 0x9f, 0xd8,
	0xcf, 0xe5, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x1b, 0xf1, 0x82, 0xbf, 0x77, 0x04, 0x00, 0x00,
}
