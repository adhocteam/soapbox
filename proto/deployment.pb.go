// Code generated by protoc-gen-go. DO NOT EDIT.
// source: deployment.proto

package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type DeploymentState int32

const (
	DeploymentState_DEPLOYMENT_ROLLOUT_WAIT  DeploymentState = 0
	DeploymentState_DEPLOYMENT_EVALUATE_WAIT DeploymentState = 1
	DeploymentState_DEPLOYMENT_ROLL_FORWARD  DeploymentState = 2
	DeploymentState_DEPLOYMENT_SUCCEEDED     DeploymentState = 3
	DeploymentState_DEPLOYMENT_FAILED        DeploymentState = 4
)

var DeploymentState_name = map[int32]string{
	0: "DEPLOYMENT_ROLLOUT_WAIT",
	1: "DEPLOYMENT_EVALUATE_WAIT",
	2: "DEPLOYMENT_ROLL_FORWARD",
	3: "DEPLOYMENT_SUCCEEDED",
	4: "DEPLOYMENT_FAILED",
}
var DeploymentState_value = map[string]int32{
	"DEPLOYMENT_ROLLOUT_WAIT":  0,
	"DEPLOYMENT_EVALUATE_WAIT": 1,
	"DEPLOYMENT_ROLL_FORWARD":  2,
	"DEPLOYMENT_SUCCEEDED":     3,
	"DEPLOYMENT_FAILED":        4,
}

func (x DeploymentState) String() string {
	return proto.EnumName(DeploymentState_name, int32(x))
}
func (DeploymentState) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

type ListDeploymentRequest struct {
	ApplicationId int32 `protobuf:"varint,1,opt,name=application_id,json=applicationId" json:"application_id,omitempty"`
}

func (m *ListDeploymentRequest) Reset()                    { *m = ListDeploymentRequest{} }
func (m *ListDeploymentRequest) String() string            { return proto1.CompactTextString(m) }
func (*ListDeploymentRequest) ProtoMessage()               {}
func (*ListDeploymentRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *ListDeploymentRequest) GetApplicationId() int32 {
	if m != nil {
		return m.ApplicationId
	}
	return 0
}

type ListDeploymentResponse struct {
	Deployments []*Deployment `protobuf:"bytes,1,rep,name=deployments" json:"deployments,omitempty"`
}

func (m *ListDeploymentResponse) Reset()                    { *m = ListDeploymentResponse{} }
func (m *ListDeploymentResponse) String() string            { return proto1.CompactTextString(m) }
func (*ListDeploymentResponse) ProtoMessage()               {}
func (*ListDeploymentResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *ListDeploymentResponse) GetDeployments() []*Deployment {
	if m != nil {
		return m.Deployments
	}
	return nil
}

type GetDeploymentRequest struct {
	Id int32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *GetDeploymentRequest) Reset()                    { *m = GetDeploymentRequest{} }
func (m *GetDeploymentRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetDeploymentRequest) ProtoMessage()               {}
func (*GetDeploymentRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *GetDeploymentRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type Deployment struct {
	Id          int32           `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Application *Application    `protobuf:"bytes,2,opt,name=application" json:"application,omitempty"`
	Env         *Environment    `protobuf:"bytes,3,opt,name=env" json:"env,omitempty"`
	Committish  string          `protobuf:"bytes,4,opt,name=committish" json:"committish,omitempty"`
	State       DeploymentState `protobuf:"varint,5,opt,name=state,enum=soapbox.DeploymentState" json:"state,omitempty"`
	CreatedAt   *google_protobuf.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
}

func (m *Deployment) Reset()                    { *m = Deployment{} }
func (m *Deployment) String() string            { return proto1.CompactTextString(m) }
func (*Deployment) ProtoMessage()               {}
func (*Deployment) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *Deployment) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Deployment) GetApplication() *Application {
	if m != nil {
		return m.Application
	}
	return nil
}

func (m *Deployment) GetEnv() *Environment {
	if m != nil {
		return m.Env
	}
	return nil
}

func (m *Deployment) GetCommittish() string {
	if m != nil {
		return m.Committish
	}
	return ""
}

func (m *Deployment) GetState() DeploymentState {
	if m != nil {
		return m.State
	}
	return DeploymentState_DEPLOYMENT_ROLLOUT_WAIT
}

func (m *Deployment) GetCreatedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

type StartDeploymentResponse struct {
	Id int32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *StartDeploymentResponse) Reset()                    { *m = StartDeploymentResponse{} }
func (m *StartDeploymentResponse) String() string            { return proto1.CompactTextString(m) }
func (*StartDeploymentResponse) ProtoMessage()               {}
func (*StartDeploymentResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *StartDeploymentResponse) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type GetDeploymentStatusRequest struct {
	Id int32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *GetDeploymentStatusRequest) Reset()                    { *m = GetDeploymentStatusRequest{} }
func (m *GetDeploymentStatusRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetDeploymentStatusRequest) ProtoMessage()               {}
func (*GetDeploymentStatusRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

func (m *GetDeploymentStatusRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type GetDeploymentStatusResponse struct {
	State string `protobuf:"bytes,1,opt,name=state" json:"state,omitempty"`
}

func (m *GetDeploymentStatusResponse) Reset()                    { *m = GetDeploymentStatusResponse{} }
func (m *GetDeploymentStatusResponse) String() string            { return proto1.CompactTextString(m) }
func (*GetDeploymentStatusResponse) ProtoMessage()               {}
func (*GetDeploymentStatusResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

func (m *GetDeploymentStatusResponse) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

type TeardownDeploymentRequest struct {
	Id int32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *TeardownDeploymentRequest) Reset()                    { *m = TeardownDeploymentRequest{} }
func (m *TeardownDeploymentRequest) String() string            { return proto1.CompactTextString(m) }
func (*TeardownDeploymentRequest) ProtoMessage()               {}
func (*TeardownDeploymentRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{7} }

func (m *TeardownDeploymentRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func init() {
	proto.RegisterType((*ListDeploymentRequest)(nil), "soapbox.ListDeploymentRequest")
	proto.RegisterType((*ListDeploymentResponse)(nil), "soapbox.ListDeploymentResponse")
	proto.RegisterType((*GetDeploymentRequest)(nil), "soapbox.GetDeploymentRequest")
	proto.RegisterType((*Deployment)(nil), "soapbox.Deployment")
	proto.RegisterType((*StartDeploymentResponse)(nil), "soapbox.StartDeploymentResponse")
	proto.RegisterType((*GetDeploymentStatusRequest)(nil), "soapbox.GetDeploymentStatusRequest")
	proto.RegisterType((*GetDeploymentStatusResponse)(nil), "soapbox.GetDeploymentStatusResponse")
	proto.RegisterType((*TeardownDeploymentRequest)(nil), "soapbox.TeardownDeploymentRequest")
	proto.RegisterEnum("soapbox.DeploymentState", DeploymentState_name, DeploymentState_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Deployments service

type DeploymentsClient interface {
	ListDeployments(ctx context.Context, in *ListDeploymentRequest, opts ...grpc.CallOption) (*ListDeploymentResponse, error)
	GetDeployment(ctx context.Context, in *GetDeploymentRequest, opts ...grpc.CallOption) (*Deployment, error)
	StartDeployment(ctx context.Context, in *Deployment, opts ...grpc.CallOption) (*StartDeploymentResponse, error)
	GetDeploymentStatus(ctx context.Context, in *GetDeploymentStatusRequest, opts ...grpc.CallOption) (*GetDeploymentStatusResponse, error)
	TeardownDeployment(ctx context.Context, in *TeardownDeploymentRequest, opts ...grpc.CallOption) (*Empty, error)
}

type deploymentsClient struct {
	cc *grpc.ClientConn
}

func NewDeploymentsClient(cc *grpc.ClientConn) DeploymentsClient {
	return &deploymentsClient{cc}
}

func (c *deploymentsClient) ListDeployments(ctx context.Context, in *ListDeploymentRequest, opts ...grpc.CallOption) (*ListDeploymentResponse, error) {
	out := new(ListDeploymentResponse)
	err := grpc.Invoke(ctx, "/soapbox.Deployments/ListDeployments", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deploymentsClient) GetDeployment(ctx context.Context, in *GetDeploymentRequest, opts ...grpc.CallOption) (*Deployment, error) {
	out := new(Deployment)
	err := grpc.Invoke(ctx, "/soapbox.Deployments/GetDeployment", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deploymentsClient) StartDeployment(ctx context.Context, in *Deployment, opts ...grpc.CallOption) (*StartDeploymentResponse, error) {
	out := new(StartDeploymentResponse)
	err := grpc.Invoke(ctx, "/soapbox.Deployments/StartDeployment", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deploymentsClient) GetDeploymentStatus(ctx context.Context, in *GetDeploymentStatusRequest, opts ...grpc.CallOption) (*GetDeploymentStatusResponse, error) {
	out := new(GetDeploymentStatusResponse)
	err := grpc.Invoke(ctx, "/soapbox.Deployments/GetDeploymentStatus", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deploymentsClient) TeardownDeployment(ctx context.Context, in *TeardownDeploymentRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := grpc.Invoke(ctx, "/soapbox.Deployments/TeardownDeployment", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Deployments service

type DeploymentsServer interface {
	ListDeployments(context.Context, *ListDeploymentRequest) (*ListDeploymentResponse, error)
	GetDeployment(context.Context, *GetDeploymentRequest) (*Deployment, error)
	StartDeployment(context.Context, *Deployment) (*StartDeploymentResponse, error)
	GetDeploymentStatus(context.Context, *GetDeploymentStatusRequest) (*GetDeploymentStatusResponse, error)
	TeardownDeployment(context.Context, *TeardownDeploymentRequest) (*Empty, error)
}

func RegisterDeploymentsServer(s *grpc.Server, srv DeploymentsServer) {
	s.RegisterService(&_Deployments_serviceDesc, srv)
}

func _Deployments_ListDeployments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListDeploymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeploymentsServer).ListDeployments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/soapbox.Deployments/ListDeployments",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeploymentsServer).ListDeployments(ctx, req.(*ListDeploymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Deployments_GetDeployment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDeploymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeploymentsServer).GetDeployment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/soapbox.Deployments/GetDeployment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeploymentsServer).GetDeployment(ctx, req.(*GetDeploymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Deployments_StartDeployment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Deployment)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeploymentsServer).StartDeployment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/soapbox.Deployments/StartDeployment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeploymentsServer).StartDeployment(ctx, req.(*Deployment))
	}
	return interceptor(ctx, in, info, handler)
}

func _Deployments_GetDeploymentStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDeploymentStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeploymentsServer).GetDeploymentStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/soapbox.Deployments/GetDeploymentStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeploymentsServer).GetDeploymentStatus(ctx, req.(*GetDeploymentStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Deployments_TeardownDeployment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TeardownDeploymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeploymentsServer).TeardownDeployment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/soapbox.Deployments/TeardownDeployment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeploymentsServer).TeardownDeployment(ctx, req.(*TeardownDeploymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Deployments_serviceDesc = grpc.ServiceDesc{
	ServiceName: "soapbox.Deployments",
	HandlerType: (*DeploymentsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListDeployments",
			Handler:    _Deployments_ListDeployments_Handler,
		},
		{
			MethodName: "GetDeployment",
			Handler:    _Deployments_GetDeployment_Handler,
		},
		{
			MethodName: "StartDeployment",
			Handler:    _Deployments_StartDeployment_Handler,
		},
		{
			MethodName: "GetDeploymentStatus",
			Handler:    _Deployments_GetDeploymentStatus_Handler,
		},
		{
			MethodName: "TeardownDeployment",
			Handler:    _Deployments_TeardownDeployment_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "deployment.proto",
}

<<<<<<< HEAD:soapboxpb/deployment.pb.go
func init() { proto.RegisterFile("deployment.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 535 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x54, 0xdd, 0x6e, 0xd3, 0x30,
	0x18, 0x6d, 0xda, 0x75, 0xa8, 0x5f, 0xd4, 0x9f, 0x7d, 0xeb, 0x58, 0xc8, 0xd8, 0x88, 0x0c, 0x4c,
	0xe5, 0x47, 0xbd, 0xe8, 0x04, 0x97, 0x48, 0x61, 0xc9, 0x50, 0xa7, 0x40, 0x51, 0x9a, 0x32, 0xc1,
	0x4d, 0x95, 0x36, 0x96, 0x88, 0xb4, 0x26, 0xa1, 0xf6, 0x06, 0x7b, 0x15, 0x1e, 0x80, 0x97, 0xe3,
	0x25, 0x50, 0x9b, 0x36, 0x71, 0x83, 0x0b, 0x77, 0xed, 0x39, 0xe7, 0xb3, 0x8f, 0x8f, 0x8f, 0x03,
	0xad, 0x80, 0x26, 0xd7, 0xf1, 0xdd, 0x8c, 0x46, 0xbc, 0x9b, 0xcc, 0x63, 0x1e, 0xe3, 0x3d, 0x16,
	0xfb, 0xc9, 0x24, 0xfe, 0xa1, 0xd7, 0x57, 0x3f, 0x52, 0x5c, 0xdf, 0xf3, 0x93, 0xe4, 0x3a, 0x9c,
	0xfa, 0x3c, 0x8c, 0xa3, 0x35, 0x44, 0xa3, 0xdb, 0x70, 0x1e, 0x47, 0xf9, 0x34, 0x79, 0x03, 0x07,
	0x4e, 0xc8, 0xb8, 0x95, 0xad, 0xea, 0xd2, 0x6f, 0x37, 0x94, 0x71, 0x7c, 0x0a, 0x0d, 0x61, 0x81,
	0x71, 0x18, 0x68, 0x8a, 0xa1, 0x74, 0xaa, 0x6e, 0x5d, 0x40, 0xfb, 0x01, 0x19, 0xc0, 0xfd, 0xe2,
	0x3c, 0x4b, 0xe2, 0x88, 0x51, 0x7c, 0x05, 0x6a, 0xee, 0x95, 0x69, 0x8a, 0x51, 0xe9, 0xa8, 0xbd,
	0xfd, 0xee, 0xda, 0xa4, 0x30, 0x21, 0xea, 0xc8, 0x29, 0xb4, 0xdf, 0x51, 0x89, 0x9f, 0x06, 0x94,
	0x33, 0x0f, 0xe5, 0x30, 0x20, 0xbf, 0x15, 0x80, 0x5c, 0x55, 0xa4, 0xf1, 0x35, 0xa8, 0x82, 0x51,
	0xad, 0x6c, 0x28, 0x1d, 0xb5, 0xd7, 0xce, 0x76, 0x37, 0x73, 0xce, 0x15, 0x85, 0x78, 0x0a, 0x15,
	0x1a, 0xdd, 0x6a, 0x95, 0x82, 0xde, 0xce, 0x83, 0x73, 0x17, 0x02, 0x3c, 0x01, 0x98, 0xc6, 0xb3,
	0x59, 0xc8, 0x79, 0xc8, 0xbe, 0x6a, 0x3b, 0x86, 0xd2, 0xa9, 0xb9, 0x02, 0x82, 0x5d, 0xa8, 0x32,
	0xee, 0x73, 0xaa, 0x55, 0x0d, 0xa5, 0xd3, 0xe8, 0x69, 0x92, 0x73, 0x0f, 0x17, 0xbc, 0x9b, 0xca,
	0xf0, 0x18, 0x60, 0x3a, 0xa7, 0x3e, 0xa7, 0xc1, 0xd8, 0xe7, 0xda, 0xee, 0x72, 0xbd, 0xda, 0x0a,
	0x31, 0x39, 0x79, 0x06, 0x87, 0x43, 0xee, 0xcf, 0x65, 0x39, 0x17, 0x83, 0x79, 0x09, 0xfa, 0x46,
	0x80, 0x8b, 0x6d, 0x6e, 0xd8, 0xb6, 0x18, 0xcf, 0xe0, 0x48, 0xaa, 0x5e, 0x2d, 0xde, 0x5e, 0x1f,
	0x43, 0x59, 0x3a, 0x4a, 0xff, 0x90, 0x17, 0xf0, 0xc0, 0xa3, 0xfe, 0x3c, 0x88, 0xbf, 0x47, 0xff,
	0xbd, 0xa8, 0xe7, 0x3f, 0x15, 0x68, 0x16, 0x0e, 0x8d, 0x47, 0x70, 0x68, 0xd9, 0x1f, 0x9d, 0xc1,
	0xe7, 0xf7, 0xf6, 0x07, 0x6f, 0xec, 0x0e, 0x1c, 0x67, 0x30, 0xf2, 0xc6, 0x57, 0x66, 0xdf, 0x6b,
	0x95, 0xf0, 0x21, 0x68, 0x02, 0x69, 0x7f, 0x32, 0x9d, 0x91, 0xe9, 0xd9, 0x29, 0xab, 0x48, 0x46,
	0xc7, 0x17, 0x03, 0xf7, 0xca, 0x74, 0xad, 0x56, 0x19, 0x35, 0x68, 0x0b, 0xe4, 0x70, 0x74, 0x7e,
	0x6e, 0xdb, 0x96, 0x6d, 0xb5, 0x2a, 0x78, 0x00, 0x7b, 0x02, 0x73, 0x61, 0xf6, 0x1d, 0xdb, 0x6a,
	0xed, 0xf4, 0x7e, 0x55, 0x40, 0xcd, 0xcd, 0x31, 0xf4, 0xa0, 0xb9, 0x59, 0x67, 0x86, 0x27, 0xd9,
	0xd5, 0x49, 0x1f, 0x8a, 0xfe, 0x68, 0x2b, 0x9f, 0x66, 0x48, 0x4a, 0x68, 0x43, 0x7d, 0x23, 0x64,
	0x3c, 0xce, 0x66, 0x64, 0x5d, 0xd7, 0x65, 0xaf, 0x84, 0x94, 0xf0, 0x12, 0x9a, 0x85, 0x12, 0xa0,
	0x4c, 0xa9, 0x1b, 0x19, 0xb8, 0xa5, 0x33, 0xa4, 0x84, 0x13, 0xd8, 0x97, 0xdc, 0x3b, 0x3e, 0x96,
	0x1b, 0xdb, 0xe8, 0x90, 0xfe, 0xe4, 0xdf, 0xa2, 0x6c, 0x8f, 0x4b, 0xc0, 0xbf, 0x6b, 0x82, 0x24,
	0x9b, 0xde, 0xda, 0x21, 0xbd, 0x91, 0x3f, 0xbc, 0x59, 0xc2, 0xef, 0x48, 0xe9, 0xad, 0xfa, 0xa5,
	0xb6, 0x82, 0x92, 0xc9, 0x64, 0x77, 0xf9, 0xed, 0x3a, 0xfb, 0x13, 0x00, 0x00, 0xff, 0xff, 0xa3,
	0x55, 0x2e, 0xab, 0x0d, 0x05, 0x00, 0x00,
=======
func init() { proto1.RegisterFile("deployment.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 467 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x92, 0x51, 0x6b, 0x13, 0x41,
	0x10, 0xc7, 0x73, 0x89, 0x69, 0xe9, 0x1c, 0x49, 0x75, 0x1a, 0xf5, 0x5c, 0xb1, 0x3d, 0x56, 0x2d,
	0x11, 0xe5, 0x0a, 0x29, 0x0a, 0xbe, 0x08, 0x15, 0x8b, 0x58, 0x04, 0xe1, 0x9a, 0x27, 0x5f, 0xca,
	0x26, 0xb7, 0xd6, 0x85, 0xdc, 0xed, 0x79, 0x3b, 0xa9, 0xe6, 0x0b, 0xf9, 0xed, 0xfc, 0x0e, 0x62,
	0x2e, 0xd9, 0xbb, 0x9c, 0x1b, 0x7d, 0x4a, 0x76, 0xe6, 0x37, 0x37, 0x33, 0xff, 0xff, 0xc0, 0xed,
	0x44, 0xe6, 0x33, 0xbd, 0x48, 0x65, 0x46, 0x51, 0x5e, 0x68, 0xd2, 0xb8, 0x6b, 0xb4, 0xc8, 0x27,
	0xfa, 0x07, 0xeb, 0xad, 0xfe, 0x94, 0x71, 0x76, 0x47, 0xe4, 0xf9, 0x4c, 0x4d, 0x05, 0x29, 0x9d,
	0xad, 0x43, 0x32, 0xbb, 0x51, 0x85, 0xce, 0xaa, 0x6a, 0x76, 0x74, 0xad, 0xf5, 0xf5, 0x4c, 0x9e,
	0x2c, 0x5f, 0x93, 0xf9, 0x97, 0x13, 0x52, 0xa9, 0x34, 0x24, 0xd2, 0xbc, 0x04, 0xf8, 0x1b, 0xb8,
	0xfb, 0x51, 0x19, 0x7a, 0x67, 0xdb, 0xc6, 0xf2, 0xdb, 0x5c, 0x1a, 0xc2, 0xa7, 0xd0, 0xaf, 0x75,
	0xb8, 0x52, 0x49, 0xe0, 0x85, 0xde, 0xb0, 0x1b, 0xf7, 0x6a, 0xd1, 0x0f, 0x09, 0xff, 0x04, 0xf7,
	0x9a, 0xf5, 0x26, 0xd7, 0x99, 0x91, 0xf8, 0x12, 0xfc, 0x6a, 0x19, 0x13, 0x78, 0x61, 0x67, 0xe8,
	0x8f, 0x0e, 0xa2, 0xf5, 0x16, 0xb5, 0x8a, 0x3a, 0xc7, 0x8f, 0x61, 0xf0, 0x5e, 0x3a, 0xe6, 0xe9,
	0x43, 0xdb, 0xce, 0xd0, 0x56, 0x09, 0xff, 0xe5, 0x01, 0x54, 0x54, 0x33, 0x8d, 0xaf, 0xc0, 0xaf,
	0x0d, 0x1a, 0xb4, 0x43, 0x6f, 0xe8, 0x8f, 0x06, 0xb6, 0xfb, 0x59, 0x95, 0x8b, 0xeb, 0x20, 0x1e,
	0x43, 0x47, 0x66, 0x37, 0x41, 0xa7, 0xc1, 0x9f, 0x57, 0xca, 0xc6, 0x7f, 0x00, 0x3c, 0x04, 0x98,
	0xea, 0x34, 0x55, 0x44, 0xca, 0x7c, 0x0d, 0x6e, 0x85, 0xde, 0x70, 0x2f, 0xae, 0x45, 0x70, 0x00,
	0x5d, 0x43, 0x82, 0x64, 0xd0, 0x5d, 0xa6, 0xca, 0x07, 0xbe, 0x06, 0x98, 0x16, 0x52, 0x90, 0x4c,
	0xae, 0x04, 0x05, 0x3b, 0xcb, 0x26, 0x2c, 0x2a, 0x3d, 0x8a, 0xd6, 0x1e, 0x45, 0xe3, 0xb5, 0x47,
	0xf1, 0xde, 0x8a, 0x3e, 0x23, 0xfe, 0x0c, 0xee, 0x5f, 0x92, 0x28, 0x5c, 0x4a, 0x37, 0xa5, 0x79,
	0x01, 0x6c, 0x43, 0xc2, 0x4b, 0x12, 0x34, 0x37, 0xdb, 0x84, 0x3c, 0x85, 0x87, 0x4e, 0x7a, 0xf5,
	0x71, 0xbb, 0x88, 0x57, 0x5b, 0x84, 0x3f, 0x87, 0x07, 0x63, 0x29, 0x8a, 0x44, 0x7f, 0xcf, 0xfe,
	0x6b, 0xd5, 0xe8, 0x67, 0x07, 0xfc, 0x8a, 0x32, 0x38, 0x86, 0xfd, 0xcd, 0x9b, 0x31, 0x78, 0x68,
	0x95, 0x76, 0x5e, 0x23, 0x3b, 0xda, 0x9a, 0x2f, 0xc7, 0xe4, 0x2d, 0x3c, 0x87, 0xde, 0xc6, 0x1e,
	0xf8, 0xc8, 0xd6, 0xb8, 0x0e, 0x8a, 0xb9, 0x4e, 0x91, 0xb7, 0xf0, 0x02, 0xf6, 0x1b, 0x3a, 0xa3,
	0x8b, 0x64, 0xa1, 0x0d, 0x6e, 0xb1, 0x85, 0xb7, 0x70, 0x02, 0x07, 0x0e, 0x69, 0xf1, 0xb1, 0x7b,
	0xb0, 0x0d, 0x9b, 0xd8, 0x93, 0x7f, 0x43, 0xb6, 0xc7, 0x05, 0xe0, 0xdf, 0x4e, 0x20, 0xb7, 0xd5,
	0x5b, 0x6d, 0x62, 0xfd, 0xea, 0xba, 0xd3, 0x9c, 0x16, 0xbc, 0xf5, 0x76, 0xf7, 0x73, 0xb7, 0x3c,
	0xc2, 0x9d, 0xe5, 0xcf, 0xe9, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0x70, 0xdb, 0x31, 0xbb, 0x8f,
	0x04, 0x00, 0x00,
>>>>>>> bc1576fc56d592ed49fa8e5af7ea3fb8ff86989f:proto/deployment.pb.go
}
