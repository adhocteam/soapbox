// Code generated by protoc-gen-go. DO NOT EDIT.
// source: application.proto

package soapboxpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ApplicationType int32

const (
	ApplicationType_SERVER  ApplicationType = 0
	ApplicationType_CRONJOB ApplicationType = 1
)

var ApplicationType_name = map[int32]string{
	0: "SERVER",
	1: "CRONJOB",
}
var ApplicationType_value = map[string]int32{
	"SERVER":  0,
	"CRONJOB": 1,
}

func (x ApplicationType) String() string {
	return proto.EnumName(ApplicationType_name, int32(x))
}
func (ApplicationType) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

type CreationState int32

const (
	CreationState_CREATE_INFRASTRUCTURE_WAIT CreationState = 0
	CreationState_SUCCEEDED                  CreationState = 1
	CreationState_FAILED                     CreationState = 2
	CreationState_DELETE_WAIT                CreationState = 3
)

var CreationState_name = map[int32]string{
	0: "CREATE_INFRASTRUCTURE_WAIT",
	1: "SUCCEEDED",
	2: "FAILED",
	3: "DELETE_WAIT",
}
var CreationState_value = map[string]int32{
	"CREATE_INFRASTRUCTURE_WAIT": 0,
	"SUCCEEDED":                  1,
	"FAILED":                     2,
	"DELETE_WAIT":                3,
}

func (x CreationState) String() string {
	return proto.EnumName(CreationState_name, int32(x))
}
func (CreationState) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

type Application struct {
	Id                 int32           `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name               string          `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Description        string          `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	ExternalDns        string          `protobuf:"bytes,4,opt,name=external_dns,json=externalDns" json:"external_dns,omitempty"`
	GithubRepoUrl      string          `protobuf:"bytes,5,opt,name=github_repo_url,json=githubRepoUrl" json:"github_repo_url,omitempty"`
	DockerfilePath     string          `protobuf:"bytes,6,opt,name=dockerfile_path,json=dockerfilePath" json:"dockerfile_path,omitempty"`
	EntrypointOverride string          `protobuf:"bytes,7,opt,name=entrypoint_override,json=entrypointOverride" json:"entrypoint_override,omitempty"`
	Type               ApplicationType `protobuf:"varint,8,opt,name=type,enum=soapbox.ApplicationType" json:"type,omitempty"`
	CreatedAt          string          `protobuf:"bytes,9,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	Slug               string          `protobuf:"bytes,10,opt,name=slug" json:"slug,omitempty"`
	InternalDns        string          `protobuf:"bytes,11,opt,name=internal_dns,json=internalDns" json:"internal_dns,omitempty"`
	CreationState      CreationState   `protobuf:"varint,12,opt,name=creation_state,json=creationState,enum=soapbox.CreationState" json:"creation_state,omitempty"`
}

func (m *Application) Reset()                    { *m = Application{} }
func (m *Application) String() string            { return proto.CompactTextString(m) }
func (*Application) ProtoMessage()               {}
func (*Application) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *Application) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Application) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Application) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Application) GetExternalDns() string {
	if m != nil {
		return m.ExternalDns
	}
	return ""
}

func (m *Application) GetGithubRepoUrl() string {
	if m != nil {
		return m.GithubRepoUrl
	}
	return ""
}

func (m *Application) GetDockerfilePath() string {
	if m != nil {
		return m.DockerfilePath
	}
	return ""
}

func (m *Application) GetEntrypointOverride() string {
	if m != nil {
		return m.EntrypointOverride
	}
	return ""
}

func (m *Application) GetType() ApplicationType {
	if m != nil {
		return m.Type
	}
	return ApplicationType_SERVER
}

func (m *Application) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *Application) GetSlug() string {
	if m != nil {
		return m.Slug
	}
	return ""
}

func (m *Application) GetInternalDns() string {
	if m != nil {
		return m.InternalDns
	}
	return ""
}

func (m *Application) GetCreationState() CreationState {
	if m != nil {
		return m.CreationState
	}
	return CreationState_CREATE_INFRASTRUCTURE_WAIT
}

type ListApplicationResponse struct {
	Applications []*Application `protobuf:"bytes,1,rep,name=applications" json:"applications,omitempty"`
}

func (m *ListApplicationResponse) Reset()                    { *m = ListApplicationResponse{} }
func (m *ListApplicationResponse) String() string            { return proto.CompactTextString(m) }
func (*ListApplicationResponse) ProtoMessage()               {}
func (*ListApplicationResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *ListApplicationResponse) GetApplications() []*Application {
	if m != nil {
		return m.Applications
	}
	return nil
}

type GetApplicationRequest struct {
	Id int32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *GetApplicationRequest) Reset()                    { *m = GetApplicationRequest{} }
func (m *GetApplicationRequest) String() string            { return proto.CompactTextString(m) }
func (*GetApplicationRequest) ProtoMessage()               {}
func (*GetApplicationRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *GetApplicationRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type DeleteApplicationRequest struct {
	Id int32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteApplicationRequest) Reset()                    { *m = DeleteApplicationRequest{} }
func (m *DeleteApplicationRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteApplicationRequest) ProtoMessage()               {}
func (*DeleteApplicationRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *DeleteApplicationRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func init() {
	proto.RegisterType((*Application)(nil), "soapbox.Application")
	proto.RegisterType((*ListApplicationResponse)(nil), "soapbox.ListApplicationResponse")
	proto.RegisterType((*GetApplicationRequest)(nil), "soapbox.GetApplicationRequest")
	proto.RegisterType((*DeleteApplicationRequest)(nil), "soapbox.DeleteApplicationRequest")
	proto.RegisterEnum("soapbox.ApplicationType", ApplicationType_name, ApplicationType_value)
	proto.RegisterEnum("soapbox.CreationState", CreationState_name, CreationState_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Applications service

type ApplicationsClient interface {
	ListApplications(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ListApplicationResponse, error)
	CreateApplication(ctx context.Context, in *Application, opts ...grpc.CallOption) (*Application, error)
	GetApplication(ctx context.Context, in *GetApplicationRequest, opts ...grpc.CallOption) (*Application, error)
	DeleteApplication(ctx context.Context, in *DeleteApplicationRequest, opts ...grpc.CallOption) (*Empty, error)
}

type applicationsClient struct {
	cc *grpc.ClientConn
}

func NewApplicationsClient(cc *grpc.ClientConn) ApplicationsClient {
	return &applicationsClient{cc}
}

func (c *applicationsClient) ListApplications(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ListApplicationResponse, error) {
	out := new(ListApplicationResponse)
	err := grpc.Invoke(ctx, "/soapbox.Applications/ListApplications", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *applicationsClient) CreateApplication(ctx context.Context, in *Application, opts ...grpc.CallOption) (*Application, error) {
	out := new(Application)
	err := grpc.Invoke(ctx, "/soapbox.Applications/CreateApplication", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *applicationsClient) GetApplication(ctx context.Context, in *GetApplicationRequest, opts ...grpc.CallOption) (*Application, error) {
	out := new(Application)
	err := grpc.Invoke(ctx, "/soapbox.Applications/GetApplication", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *applicationsClient) DeleteApplication(ctx context.Context, in *DeleteApplicationRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := grpc.Invoke(ctx, "/soapbox.Applications/DeleteApplication", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Applications service

type ApplicationsServer interface {
	ListApplications(context.Context, *Empty) (*ListApplicationResponse, error)
	CreateApplication(context.Context, *Application) (*Application, error)
	GetApplication(context.Context, *GetApplicationRequest) (*Application, error)
	DeleteApplication(context.Context, *DeleteApplicationRequest) (*Empty, error)
}

func RegisterApplicationsServer(s *grpc.Server, srv ApplicationsServer) {
	s.RegisterService(&_Applications_serviceDesc, srv)
}

func _Applications_ListApplications_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationsServer).ListApplications(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/soapbox.Applications/ListApplications",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationsServer).ListApplications(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Applications_CreateApplication_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Application)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationsServer).CreateApplication(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/soapbox.Applications/CreateApplication",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationsServer).CreateApplication(ctx, req.(*Application))
	}
	return interceptor(ctx, in, info, handler)
}

func _Applications_GetApplication_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetApplicationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationsServer).GetApplication(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/soapbox.Applications/GetApplication",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationsServer).GetApplication(ctx, req.(*GetApplicationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Applications_DeleteApplication_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteApplicationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationsServer).DeleteApplication(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/soapbox.Applications/DeleteApplication",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationsServer).DeleteApplication(ctx, req.(*DeleteApplicationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Applications_serviceDesc = grpc.ServiceDesc{
	ServiceName: "soapbox.Applications",
	HandlerType: (*ApplicationsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListApplications",
			Handler:    _Applications_ListApplications_Handler,
		},
		{
			MethodName: "CreateApplication",
			Handler:    _Applications_CreateApplication_Handler,
		},
		{
			MethodName: "GetApplication",
			Handler:    _Applications_GetApplication_Handler,
		},
		{
			MethodName: "DeleteApplication",
			Handler:    _Applications_DeleteApplication_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "application.proto",
}

func init() { proto.RegisterFile("application.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 565 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x94, 0x5d, 0x6f, 0xd3, 0x3c,
	0x14, 0xc7, 0x9b, 0x76, 0x2f, 0x4f, 0x4f, 0xfa, 0xb6, 0xf3, 0xf0, 0x62, 0x55, 0x62, 0xea, 0x72,
	0xc1, 0xaa, 0x0a, 0x0d, 0x69, 0xdc, 0x70, 0xc3, 0x45, 0xd6, 0x78, 0x30, 0x34, 0x6d, 0xc8, 0x4d,
	0x41, 0x82, 0x8b, 0x28, 0x6d, 0xcc, 0x66, 0x91, 0xc5, 0x26, 0x76, 0xd1, 0xfa, 0xa1, 0xf8, 0x04,
	0x7c, 0x39, 0x94, 0x34, 0xeb, 0xd2, 0xd2, 0xc1, 0x9d, 0xfd, 0x3f, 0xbf, 0x1c, 0x1d, 0xff, 0x6c,
	0x05, 0xf6, 0x42, 0xa5, 0x62, 0x31, 0x0d, 0x8d, 0x90, 0xc9, 0x91, 0x4a, 0xa5, 0x91, 0xb8, 0xab,
	0x65, 0xa8, 0x26, 0xf2, 0xb6, 0xdb, 0x2c, 0x16, 0x8b, 0xdc, 0xf9, 0x55, 0x03, 0xdb, 0xbd, 0xa7,
	0xb1, 0x05, 0x55, 0x11, 0x11, 0xab, 0x67, 0xf5, 0xb7, 0x59, 0x55, 0x44, 0x88, 0xb0, 0x95, 0x84,
	0x37, 0x9c, 0x54, 0x7b, 0x56, 0xbf, 0xce, 0xf2, 0x35, 0xf6, 0xc0, 0x8e, 0xb8, 0x9e, 0xa6, 0x42,
	0x65, 0x9f, 0x90, 0x5a, 0x5e, 0x2a, 0x47, 0x78, 0x00, 0x0d, 0x7e, 0x6b, 0x78, 0x9a, 0x84, 0x71,
	0x10, 0x25, 0x9a, 0x6c, 0x2d, 0x90, 0xbb, 0xcc, 0x4b, 0x34, 0x3e, 0x87, 0xf6, 0x95, 0x30, 0xd7,
	0xb3, 0x49, 0x90, 0x72, 0x25, 0x83, 0x59, 0x1a, 0x93, 0xed, 0x9c, 0x6a, 0x2e, 0x62, 0xc6, 0x95,
	0x1c, 0xa7, 0x31, 0x1e, 0x42, 0x3b, 0x92, 0xd3, 0x6f, 0x3c, 0xfd, 0x2a, 0x62, 0x1e, 0xa8, 0xd0,
	0x5c, 0x93, 0x9d, 0x9c, 0x6b, 0xdd, 0xc7, 0x1f, 0x42, 0x73, 0x8d, 0x2f, 0xe1, 0x7f, 0x9e, 0x98,
	0x74, 0xae, 0xa4, 0x48, 0x4c, 0x20, 0x7f, 0xf0, 0x34, 0x15, 0x11, 0x27, 0xbb, 0x39, 0x8c, 0xf7,
	0xa5, 0xcb, 0xa2, 0x82, 0x2f, 0x60, 0xcb, 0xcc, 0x15, 0x27, 0xff, 0xf5, 0xac, 0x7e, 0xeb, 0x98,
	0x1c, 0xdd, 0x89, 0x29, 0xe9, 0xf0, 0xe7, 0x8a, 0xb3, 0x9c, 0xc2, 0x67, 0x00, 0xd3, 0x94, 0x87,
	0x86, 0x47, 0x41, 0x68, 0x48, 0x3d, 0xef, 0x5a, 0x2f, 0x12, 0xd7, 0x64, 0x9e, 0x74, 0x3c, 0xbb,
	0x22, 0xb0, 0xf0, 0x94, 0xad, 0x33, 0x0b, 0x22, 0x29, 0x59, 0xb0, 0x17, 0x16, 0xee, 0xb2, 0xcc,
	0xc2, 0x1b, 0x68, 0xe5, 0x3d, 0x84, 0x4c, 0x02, 0x6d, 0x42, 0xc3, 0x49, 0x23, 0x9f, 0xe6, 0xc9,
	0x72, 0x9a, 0x61, 0x51, 0x1e, 0x65, 0x55, 0xd6, 0x9c, 0x96, 0xb7, 0xce, 0x08, 0x9e, 0x9e, 0x0b,
	0x6d, 0x4a, 0x13, 0x33, 0xae, 0x95, 0x4c, 0x34, 0xc7, 0xd7, 0xd0, 0x28, 0xbd, 0x02, 0x4d, 0xac,
	0x5e, 0xad, 0x6f, 0x1f, 0x3f, 0xda, 0x74, 0x4a, 0xb6, 0x42, 0x3a, 0x87, 0xf0, 0xf8, 0x2d, 0x5f,
	0xed, 0xf9, 0x7d, 0xc6, 0xb5, 0x59, 0x7f, 0x1b, 0xce, 0x00, 0x88, 0xc7, 0x63, 0x6e, 0xf8, 0xbf,
	0xd9, 0xc1, 0x00, 0xda, 0x6b, 0x5e, 0x11, 0x60, 0x67, 0x44, 0xd9, 0x47, 0xca, 0x3a, 0x15, 0xb4,
	0x61, 0x77, 0xc8, 0x2e, 0x2f, 0xde, 0x5f, 0x9e, 0x74, 0xac, 0xc1, 0x17, 0x68, 0xae, 0x9c, 0x1a,
	0xf7, 0xa1, 0x3b, 0x64, 0xd4, 0xf5, 0x69, 0x70, 0x76, 0x71, 0xca, 0xdc, 0x91, 0xcf, 0xc6, 0x43,
	0x7f, 0xcc, 0x68, 0xf0, 0xc9, 0x3d, 0xf3, 0x3b, 0x15, 0x6c, 0x42, 0x7d, 0x34, 0x1e, 0x0e, 0x29,
	0xf5, 0xa8, 0xd7, 0xb1, 0xb2, 0xc6, 0xa7, 0xee, 0xd9, 0x39, 0xf5, 0x3a, 0x55, 0x6c, 0x83, 0xed,
	0xd1, 0x73, 0xea, 0x17, 0x6c, 0xed, 0xf8, 0x67, 0x15, 0x1a, 0xa5, 0x49, 0x34, 0x9e, 0x42, 0x67,
	0xcd, 0xa1, 0xc6, 0xd6, 0x52, 0x13, 0xbd, 0x51, 0x66, 0xde, 0xed, 0x2d, 0xf7, 0x0f, 0xe8, 0x76,
	0x2a, 0xe8, 0xc2, 0x5e, 0x3e, 0x75, 0xd9, 0x06, 0x6e, 0xf4, 0xdd, 0xdd, 0x98, 0x3a, 0x15, 0x7c,
	0x07, 0xad, 0x55, 0xf3, 0xb8, 0xbf, 0x24, 0x37, 0x5e, 0xc9, 0x5f, 0x3a, 0xed, 0xfd, 0x71, 0x35,
	0x78, 0xb0, 0x84, 0x1f, 0xba, 0xb6, 0xee, 0xda, 0xc1, 0x9d, 0xca, 0x89, 0xfd, 0xb9, 0x5e, 0x44,
	0x6a, 0x32, 0xd9, 0xc9, 0x7f, 0x1a, 0xaf, 0x7e, 0x07, 0x00, 0x00, 0xff, 0xff, 0xb4, 0x89, 0x9b,
	0x13, 0x61, 0x04, 0x00, 0x00,
}
