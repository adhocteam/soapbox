// Code generated by protoc-gen-go. DO NOT EDIT.
// source: application.proto

/*
Package soapboxpb is a generated protocol buffer package.

It is generated from these files:
	application.proto
	deployment.proto
	environment.proto

It has these top-level messages:
	CreateApplicationRequest
	CreateApplicationResponse
	ListApplicationRequest
	ApplicationSummary
	ListApplicationResponse
	GetApplicationRequest
	GetApplicationResponse
	Application
	ListDeploymentRequest
	ListDeploymentResponse
	GetDeploymentRequest
	Deployment
	StartDeploymentRequest
	StartDeploymentResponse
	GetDeploymentStatusRequest
	GetDeploymentStatusResponse
	TeardownDeploymentRequest
	TeardownDeploymentResponse
	ListEnvironmentRequest
	ListEnvironmentResponse
	GetEnvironmentRequest
	GetEnvironmentResponse
	Environment
	EnvironmentVariable
	CreateEnvironmentRequest
	CreateEnvironmentResponse
	DestroyEnvironmentRequest
	DestroyEnvironmentResponse
	CopyEnvironmentRequest
	CopyEnvironmentResponse
*/
package soapboxpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ApplicationType int32

const (
	ApplicationType_SERVER  ApplicationType = 0
	ApplicationType_CRONJOB ApplicationType = 1
)

var ApplicationType_name = map[int32]string{
	0: "SERVER",
	1: "CRONJOB",
}
var ApplicationType_value = map[string]int32{
	"SERVER":  0,
	"CRONJOB": 1,
}

func (x ApplicationType) String() string {
	return proto.EnumName(ApplicationType_name, int32(x))
}
func (ApplicationType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type CreateApplicationRequest struct {
	Name               string          `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Description        string          `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	ExternalDNS        string          `protobuf:"bytes,3,opt,name=externalDNS" json:"externalDNS,omitempty"`
	GithubRepoURL      string          `protobuf:"bytes,4,opt,name=githubRepoURL" json:"githubRepoURL,omitempty"`
	DockerfilePath     string          `protobuf:"bytes,5,opt,name=dockerfilePath" json:"dockerfilePath,omitempty"`
	EntrypointOverride string          `protobuf:"bytes,6,opt,name=entrypointOverride" json:"entrypointOverride,omitempty"`
	Type               ApplicationType `protobuf:"varint,7,opt,name=type,enum=soapbox.ApplicationType" json:"type,omitempty"`
}

func (m *CreateApplicationRequest) Reset()                    { *m = CreateApplicationRequest{} }
func (m *CreateApplicationRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateApplicationRequest) ProtoMessage()               {}
func (*CreateApplicationRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CreateApplicationRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateApplicationRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *CreateApplicationRequest) GetExternalDNS() string {
	if m != nil {
		return m.ExternalDNS
	}
	return ""
}

func (m *CreateApplicationRequest) GetGithubRepoURL() string {
	if m != nil {
		return m.GithubRepoURL
	}
	return ""
}

func (m *CreateApplicationRequest) GetDockerfilePath() string {
	if m != nil {
		return m.DockerfilePath
	}
	return ""
}

func (m *CreateApplicationRequest) GetEntrypointOverride() string {
	if m != nil {
		return m.EntrypointOverride
	}
	return ""
}

func (m *CreateApplicationRequest) GetType() ApplicationType {
	if m != nil {
		return m.Type
	}
	return ApplicationType_SERVER
}

type CreateApplicationResponse struct {
	Id int32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *CreateApplicationResponse) Reset()                    { *m = CreateApplicationResponse{} }
func (m *CreateApplicationResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateApplicationResponse) ProtoMessage()               {}
func (*CreateApplicationResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CreateApplicationResponse) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type ListApplicationRequest struct {
}

func (m *ListApplicationRequest) Reset()                    { *m = ListApplicationRequest{} }
func (m *ListApplicationRequest) String() string            { return proto.CompactTextString(m) }
func (*ListApplicationRequest) ProtoMessage()               {}
func (*ListApplicationRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type ApplicationSummary struct {
	Id   int32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *ApplicationSummary) Reset()                    { *m = ApplicationSummary{} }
func (m *ApplicationSummary) String() string            { return proto.CompactTextString(m) }
func (*ApplicationSummary) ProtoMessage()               {}
func (*ApplicationSummary) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ApplicationSummary) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ApplicationSummary) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ListApplicationResponse struct {
	Applications []*ApplicationSummary `protobuf:"bytes,1,rep,name=applications" json:"applications,omitempty"`
}

func (m *ListApplicationResponse) Reset()                    { *m = ListApplicationResponse{} }
func (m *ListApplicationResponse) String() string            { return proto.CompactTextString(m) }
func (*ListApplicationResponse) ProtoMessage()               {}
func (*ListApplicationResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ListApplicationResponse) GetApplications() []*ApplicationSummary {
	if m != nil {
		return m.Applications
	}
	return nil
}

type GetApplicationRequest struct {
	Id int32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *GetApplicationRequest) Reset()                    { *m = GetApplicationRequest{} }
func (m *GetApplicationRequest) String() string            { return proto.CompactTextString(m) }
func (*GetApplicationRequest) ProtoMessage()               {}
func (*GetApplicationRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *GetApplicationRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type GetApplicationResponse struct {
	App *Application `protobuf:"bytes,1,opt,name=app" json:"app,omitempty"`
}

func (m *GetApplicationResponse) Reset()                    { *m = GetApplicationResponse{} }
func (m *GetApplicationResponse) String() string            { return proto.CompactTextString(m) }
func (*GetApplicationResponse) ProtoMessage()               {}
func (*GetApplicationResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *GetApplicationResponse) GetApp() *Application {
	if m != nil {
		return m.App
	}
	return nil
}

type Application struct {
	Id                 int32           `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name               string          `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Description        string          `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	ExternalDNS        string          `protobuf:"bytes,4,opt,name=externalDNS" json:"externalDNS,omitempty"`
	GithubRepoURL      string          `protobuf:"bytes,5,opt,name=githubRepoURL" json:"githubRepoURL,omitempty"`
	DockerfilePath     string          `protobuf:"bytes,6,opt,name=dockerfilePath" json:"dockerfilePath,omitempty"`
	EntrypointOverride string          `protobuf:"bytes,7,opt,name=entrypointOverride" json:"entrypointOverride,omitempty"`
	Type               ApplicationType `protobuf:"varint,8,opt,name=type,enum=soapbox.ApplicationType" json:"type,omitempty"`
	CreatedAt          string          `protobuf:"bytes,9,opt,name=createdAt" json:"createdAt,omitempty"`
}

func (m *Application) Reset()                    { *m = Application{} }
func (m *Application) String() string            { return proto.CompactTextString(m) }
func (*Application) ProtoMessage()               {}
func (*Application) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *Application) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Application) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Application) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Application) GetExternalDNS() string {
	if m != nil {
		return m.ExternalDNS
	}
	return ""
}

func (m *Application) GetGithubRepoURL() string {
	if m != nil {
		return m.GithubRepoURL
	}
	return ""
}

func (m *Application) GetDockerfilePath() string {
	if m != nil {
		return m.DockerfilePath
	}
	return ""
}

func (m *Application) GetEntrypointOverride() string {
	if m != nil {
		return m.EntrypointOverride
	}
	return ""
}

func (m *Application) GetType() ApplicationType {
	if m != nil {
		return m.Type
	}
	return ApplicationType_SERVER
}

func (m *Application) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func init() {
	proto.RegisterType((*CreateApplicationRequest)(nil), "soapbox.CreateApplicationRequest")
	proto.RegisterType((*CreateApplicationResponse)(nil), "soapbox.CreateApplicationResponse")
	proto.RegisterType((*ListApplicationRequest)(nil), "soapbox.ListApplicationRequest")
	proto.RegisterType((*ApplicationSummary)(nil), "soapbox.ApplicationSummary")
	proto.RegisterType((*ListApplicationResponse)(nil), "soapbox.ListApplicationResponse")
	proto.RegisterType((*GetApplicationRequest)(nil), "soapbox.GetApplicationRequest")
	proto.RegisterType((*GetApplicationResponse)(nil), "soapbox.GetApplicationResponse")
	proto.RegisterType((*Application)(nil), "soapbox.Application")
	proto.RegisterEnum("soapbox.ApplicationType", ApplicationType_name, ApplicationType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Applications service

type ApplicationsClient interface {
	CreateApplication(ctx context.Context, in *CreateApplicationRequest, opts ...grpc.CallOption) (*CreateApplicationResponse, error)
	ListApplications(ctx context.Context, in *ListApplicationRequest, opts ...grpc.CallOption) (*ListApplicationResponse, error)
	GetApplication(ctx context.Context, in *GetApplicationRequest, opts ...grpc.CallOption) (*GetApplicationResponse, error)
}

type applicationsClient struct {
	cc *grpc.ClientConn
}

func NewApplicationsClient(cc *grpc.ClientConn) ApplicationsClient {
	return &applicationsClient{cc}
}

func (c *applicationsClient) CreateApplication(ctx context.Context, in *CreateApplicationRequest, opts ...grpc.CallOption) (*CreateApplicationResponse, error) {
	out := new(CreateApplicationResponse)
	err := grpc.Invoke(ctx, "/soapbox.Applications/CreateApplication", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *applicationsClient) ListApplications(ctx context.Context, in *ListApplicationRequest, opts ...grpc.CallOption) (*ListApplicationResponse, error) {
	out := new(ListApplicationResponse)
	err := grpc.Invoke(ctx, "/soapbox.Applications/ListApplications", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *applicationsClient) GetApplication(ctx context.Context, in *GetApplicationRequest, opts ...grpc.CallOption) (*GetApplicationResponse, error) {
	out := new(GetApplicationResponse)
	err := grpc.Invoke(ctx, "/soapbox.Applications/GetApplication", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Applications service

type ApplicationsServer interface {
	CreateApplication(context.Context, *CreateApplicationRequest) (*CreateApplicationResponse, error)
	ListApplications(context.Context, *ListApplicationRequest) (*ListApplicationResponse, error)
	GetApplication(context.Context, *GetApplicationRequest) (*GetApplicationResponse, error)
}

func RegisterApplicationsServer(s *grpc.Server, srv ApplicationsServer) {
	s.RegisterService(&_Applications_serviceDesc, srv)
}

func _Applications_CreateApplication_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateApplicationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationsServer).CreateApplication(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/soapbox.Applications/CreateApplication",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationsServer).CreateApplication(ctx, req.(*CreateApplicationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Applications_ListApplications_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListApplicationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationsServer).ListApplications(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/soapbox.Applications/ListApplications",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationsServer).ListApplications(ctx, req.(*ListApplicationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Applications_GetApplication_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetApplicationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationsServer).GetApplication(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/soapbox.Applications/GetApplication",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationsServer).GetApplication(ctx, req.(*GetApplicationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Applications_serviceDesc = grpc.ServiceDesc{
	ServiceName: "soapbox.Applications",
	HandlerType: (*ApplicationsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateApplication",
			Handler:    _Applications_CreateApplication_Handler,
		},
		{
			MethodName: "ListApplications",
			Handler:    _Applications_ListApplications_Handler,
		},
		{
			MethodName: "GetApplication",
			Handler:    _Applications_GetApplication_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "application.proto",
}

func init() { proto.RegisterFile("application.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 493 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x94, 0xdd, 0x6e, 0xd3, 0x30,
	0x14, 0xc7, 0xd7, 0xf4, 0x8b, 0x9e, 0x8c, 0xd2, 0x1d, 0xc1, 0x30, 0x05, 0xb1, 0x10, 0xa1, 0x51,
	0x0d, 0xd4, 0x8b, 0x72, 0xc3, 0x1d, 0x6c, 0x63, 0x42, 0x42, 0xd3, 0x8a, 0x5c, 0x3e, 0xa4, 0x89,
	0x9b, 0xb4, 0x39, 0x30, 0x8b, 0x36, 0x31, 0xb6, 0x8b, 0xd6, 0x57, 0xe1, 0x82, 0x57, 0xe1, 0xd5,
	0x50, 0xbd, 0x90, 0xa6, 0x69, 0xca, 0xca, 0x5d, 0x75, 0xfc, 0x3b, 0xc7, 0xf6, 0xbf, 0xbf, 0x18,
	0x76, 0x02, 0x29, 0xc7, 0x62, 0x14, 0x18, 0x11, 0x47, 0x5d, 0xa9, 0x62, 0x13, 0x63, 0x5d, 0xc7,
	0x81, 0x1c, 0xc6, 0x97, 0xfe, 0x2f, 0x07, 0xd8, 0xb1, 0xa2, 0xc0, 0xd0, 0xe1, 0x02, 0xe2, 0xf4,
	0x7d, 0x4a, 0xda, 0x20, 0x42, 0x25, 0x0a, 0x26, 0xc4, 0x4a, 0x5e, 0xa9, 0xd3, 0xe0, 0xf6, 0x37,
	0x7a, 0xe0, 0x86, 0xa4, 0x47, 0x4a, 0xc8, 0x39, 0xc9, 0x1c, 0xbb, 0x94, 0x2d, 0xcd, 0x09, 0xba,
	0x34, 0xa4, 0xa2, 0x60, 0xfc, 0xfa, 0x6c, 0xc0, 0xca, 0x57, 0x44, 0xa6, 0x84, 0x8f, 0xe1, 0xe6,
	0x57, 0x61, 0x2e, 0xa6, 0x43, 0x4e, 0x32, 0xfe, 0xc0, 0x4f, 0x59, 0xc5, 0x32, 0xcb, 0x45, 0xdc,
	0x87, 0x66, 0x18, 0x8f, 0xbe, 0x91, 0xfa, 0x22, 0xc6, 0xf4, 0x2e, 0x30, 0x17, 0xac, 0x6a, 0xb1,
	0x5c, 0x15, 0xbb, 0x80, 0x14, 0x19, 0x35, 0x93, 0xb1, 0x88, 0x4c, 0xff, 0x07, 0x29, 0x25, 0x42,
	0x62, 0x35, 0xcb, 0x16, 0xac, 0xe0, 0x33, 0xa8, 0x98, 0x99, 0x24, 0x56, 0xf7, 0x4a, 0x9d, 0x66,
	0x8f, 0x75, 0x93, 0x28, 0xba, 0x99, 0x00, 0xde, 0xcf, 0x24, 0x71, 0x4b, 0xf9, 0x4f, 0xe1, 0x5e,
	0x41, 0x3e, 0x5a, 0xc6, 0x91, 0x26, 0x6c, 0x82, 0x23, 0x42, 0x1b, 0x4f, 0x95, 0x3b, 0x22, 0xf4,
	0x19, 0xec, 0x9e, 0x0a, 0x6d, 0x56, 0xa3, 0xf4, 0x5f, 0x00, 0x66, 0xaa, 0x83, 0xe9, 0x64, 0x12,
	0xa8, 0x59, 0xbe, 0x3f, 0x0d, 0xdc, 0x59, 0x04, 0xee, 0x9f, 0xc3, 0xdd, 0x95, 0x99, 0xc9, 0xf6,
	0x2f, 0x61, 0x3b, 0xf3, 0xd7, 0x6a, 0x56, 0xf2, 0xca, 0x1d, 0xb7, 0x77, 0xbf, 0xe8, 0x46, 0xc9,
	0x8e, 0x7c, 0xa9, 0xc1, 0x7f, 0x02, 0x77, 0xde, 0x50, 0xc1, 0x71, 0x57, 0x2e, 0xf6, 0x0a, 0x76,
	0xf3, 0x60, 0x72, 0x86, 0x7d, 0x28, 0x07, 0x52, 0x5a, 0xd4, 0xed, 0xdd, 0x2e, 0xda, 0x9a, 0xcf,
	0x01, 0xff, 0xb7, 0x03, 0x6e, 0xa6, 0xb8, 0xc9, 0xd5, 0xf3, 0xae, 0x95, 0xaf, 0x75, 0xad, 0xb2,
	0x81, 0x6b, 0xd5, 0xcd, 0x5c, 0xab, 0xfd, 0x87, 0x6b, 0xf5, 0x6b, 0x5d, 0xbb, 0xb1, 0x89, 0x6b,
	0xf8, 0x00, 0x1a, 0x23, 0xeb, 0x5a, 0x78, 0x68, 0x58, 0xc3, 0x0e, 0x5d, 0x14, 0x0e, 0x0e, 0xe0,
	0x56, 0xae, 0x0d, 0x01, 0x6a, 0x83, 0x13, 0xfe, 0xf1, 0x84, 0xb7, 0xb6, 0xd0, 0x85, 0xfa, 0x31,
	0xef, 0x9f, 0xbd, 0xed, 0x1f, 0xb5, 0x4a, 0xbd, 0x9f, 0x0e, 0x6c, 0x67, 0x60, 0x8d, 0x9f, 0x61,
	0x67, 0x45, 0x63, 0x7c, 0x94, 0x9e, 0x67, 0xdd, 0x13, 0xd0, 0xf6, 0xff, 0x85, 0x5c, 0x29, 0xe0,
	0x6f, 0xe1, 0x27, 0x68, 0xe5, 0x1c, 0xd5, 0xb8, 0x97, 0x76, 0x16, 0x7f, 0x12, 0x6d, 0x6f, 0x3d,
	0x90, 0x0e, 0x1e, 0x40, 0x73, 0xd9, 0x3b, 0x7c, 0x98, 0x76, 0x15, 0x9a, 0xdb, 0xde, 0x5b, 0xbb,
	0xfe, 0x77, 0xe8, 0x91, 0x7b, 0xde, 0x48, 0x18, 0x39, 0x1c, 0xd6, 0xec, 0x83, 0xf8, 0xfc, 0x4f,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x4a, 0xb0, 0xaa, 0xe3, 0x25, 0x05, 0x00, 0x00,
}
