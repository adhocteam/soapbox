// Code generated by protoc-gen-go. DO NOT EDIT.
// source: deployment.proto

package soapboxpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type StartDeploymentRequest struct {
	Application *Application `protobuf:"bytes,1,opt,name=application" json:"application,omitempty"`
	Sha1OrTag   string       `protobuf:"bytes,2,opt,name=sha1OrTag" json:"sha1OrTag,omitempty"`
	Env         *Environment `protobuf:"bytes,3,opt,name=env" json:"env,omitempty"`
}

func (m *StartDeploymentRequest) Reset()                    { *m = StartDeploymentRequest{} }
func (m *StartDeploymentRequest) String() string            { return proto.CompactTextString(m) }
func (*StartDeploymentRequest) ProtoMessage()               {}
func (*StartDeploymentRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *StartDeploymentRequest) GetApplication() *Application {
	if m != nil {
		return m.Application
	}
	return nil
}

func (m *StartDeploymentRequest) GetSha1OrTag() string {
	if m != nil {
		return m.Sha1OrTag
	}
	return ""
}

func (m *StartDeploymentRequest) GetEnv() *Environment {
	if m != nil {
		return m.Env
	}
	return nil
}

type StartDeploymentResponse struct {
	Id int32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *StartDeploymentResponse) Reset()                    { *m = StartDeploymentResponse{} }
func (m *StartDeploymentResponse) String() string            { return proto.CompactTextString(m) }
func (*StartDeploymentResponse) ProtoMessage()               {}
func (*StartDeploymentResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *StartDeploymentResponse) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type GetDeploymentStatusRequest struct {
	Id int32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *GetDeploymentStatusRequest) Reset()                    { *m = GetDeploymentStatusRequest{} }
func (m *GetDeploymentStatusRequest) String() string            { return proto.CompactTextString(m) }
func (*GetDeploymentStatusRequest) ProtoMessage()               {}
func (*GetDeploymentStatusRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *GetDeploymentStatusRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type GetDeploymentStatusResponse struct {
	State string `protobuf:"bytes,1,opt,name=state" json:"state,omitempty"`
}

func (m *GetDeploymentStatusResponse) Reset()                    { *m = GetDeploymentStatusResponse{} }
func (m *GetDeploymentStatusResponse) String() string            { return proto.CompactTextString(m) }
func (*GetDeploymentStatusResponse) ProtoMessage()               {}
func (*GetDeploymentStatusResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *GetDeploymentStatusResponse) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func init() {
	proto.RegisterType((*StartDeploymentRequest)(nil), "soapbox.StartDeploymentRequest")
	proto.RegisterType((*StartDeploymentResponse)(nil), "soapbox.StartDeploymentResponse")
	proto.RegisterType((*GetDeploymentStatusRequest)(nil), "soapbox.GetDeploymentStatusRequest")
	proto.RegisterType((*GetDeploymentStatusResponse)(nil), "soapbox.GetDeploymentStatusResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Deployments service

type DeploymentsClient interface {
	StartDeployment(ctx context.Context, in *StartDeploymentRequest, opts ...grpc.CallOption) (*StartDeploymentResponse, error)
	GetDeploymentStatus(ctx context.Context, in *GetDeploymentStatusRequest, opts ...grpc.CallOption) (*GetDeploymentStatusResponse, error)
}

type deploymentsClient struct {
	cc *grpc.ClientConn
}

func NewDeploymentsClient(cc *grpc.ClientConn) DeploymentsClient {
	return &deploymentsClient{cc}
}

func (c *deploymentsClient) StartDeployment(ctx context.Context, in *StartDeploymentRequest, opts ...grpc.CallOption) (*StartDeploymentResponse, error) {
	out := new(StartDeploymentResponse)
	err := grpc.Invoke(ctx, "/soapbox.Deployments/StartDeployment", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deploymentsClient) GetDeploymentStatus(ctx context.Context, in *GetDeploymentStatusRequest, opts ...grpc.CallOption) (*GetDeploymentStatusResponse, error) {
	out := new(GetDeploymentStatusResponse)
	err := grpc.Invoke(ctx, "/soapbox.Deployments/GetDeploymentStatus", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Deployments service

type DeploymentsServer interface {
	StartDeployment(context.Context, *StartDeploymentRequest) (*StartDeploymentResponse, error)
	GetDeploymentStatus(context.Context, *GetDeploymentStatusRequest) (*GetDeploymentStatusResponse, error)
}

func RegisterDeploymentsServer(s *grpc.Server, srv DeploymentsServer) {
	s.RegisterService(&_Deployments_serviceDesc, srv)
}

func _Deployments_StartDeployment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartDeploymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeploymentsServer).StartDeployment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/soapbox.Deployments/StartDeployment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeploymentsServer).StartDeployment(ctx, req.(*StartDeploymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Deployments_GetDeploymentStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDeploymentStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeploymentsServer).GetDeploymentStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/soapbox.Deployments/GetDeploymentStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeploymentsServer).GetDeploymentStatus(ctx, req.(*GetDeploymentStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Deployments_serviceDesc = grpc.ServiceDesc{
	ServiceName: "soapbox.Deployments",
	HandlerType: (*DeploymentsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "StartDeployment",
			Handler:    _Deployments_StartDeployment_Handler,
		},
		{
			MethodName: "GetDeploymentStatus",
			Handler:    _Deployments_GetDeploymentStatus_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "deployment.proto",
}

func init() { proto.RegisterFile("deployment.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 285 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x92, 0x51, 0x4b, 0xc3, 0x30,
	0x14, 0x85, 0x6d, 0xc7, 0x94, 0xde, 0x82, 0xba, 0x38, 0xb4, 0x54, 0xc1, 0x52, 0x45, 0x26, 0x48,
	0xc1, 0x0d, 0x7c, 0x57, 0x14, 0x1f, 0x85, 0x4c, 0x7c, 0xf0, 0x2d, 0xb5, 0x41, 0x03, 0x33, 0x89,
	0xcd, 0xdd, 0xd0, 0x3f, 0xe2, 0x7f, 0xf2, 0x5f, 0x89, 0x6d, 0xd7, 0x94, 0xda, 0xed, 0x31, 0xb9,
	0xdf, 0x39, 0xf7, 0x9c, 0x10, 0xd8, 0xcd, 0xb8, 0x9e, 0xa9, 0xaf, 0x77, 0x2e, 0x31, 0xd1, 0xb9,
	0x42, 0x45, 0xb6, 0x8c, 0x62, 0x3a, 0x55, 0x9f, 0xe1, 0x80, 0x69, 0x3d, 0x13, 0x2f, 0x0c, 0x85,
	0x92, 0xe5, 0x2c, 0x1c, 0x70, 0xb9, 0x10, 0xb9, 0x92, 0x16, 0x8f, 0xbf, 0x1d, 0xd8, 0x9f, 0x22,
	0xcb, 0xf1, 0xb6, 0x36, 0xa2, 0xfc, 0x63, 0xce, 0x0d, 0x92, 0x2b, 0xf0, 0x1b, 0x16, 0x81, 0x13,
	0x39, 0x23, 0x7f, 0x3c, 0x4c, 0x2a, 0xff, 0xe4, 0xda, 0xce, 0x68, 0x13, 0x24, 0x47, 0xe0, 0x99,
	0x37, 0x76, 0xf9, 0x90, 0x3f, 0xb2, 0xd7, 0xc0, 0x8d, 0x9c, 0x91, 0x47, 0xed, 0x05, 0x39, 0x83,
	0x1e, 0x97, 0x8b, 0xa0, 0xd7, 0x72, 0xbb, 0xb3, 0xc9, 0xe8, 0x1f, 0x10, 0x9f, 0xc3, 0xc1, 0xbf,
	0x5c, 0x46, 0x2b, 0x69, 0x38, 0xd9, 0x06, 0x57, 0x64, 0x45, 0x9e, 0x3e, 0x75, 0x45, 0x16, 0x5f,
	0x40, 0x78, 0xcf, 0x1b, 0xe0, 0x14, 0x19, 0xce, 0xcd, 0xb2, 0x46, 0x9b, 0x9e, 0xc0, 0x61, 0x27,
	0x5d, 0x99, 0x0f, 0xa1, 0x6f, 0x90, 0x21, 0x2f, 0x14, 0x1e, 0x2d, 0x0f, 0xe3, 0x1f, 0x07, 0x7c,
	0x2b, 0x31, 0xe4, 0x09, 0x76, 0x5a, 0xe9, 0xc8, 0x71, 0xdd, 0xa5, 0xfb, 0x3d, 0xc3, 0x68, 0x35,
	0x50, 0xee, 0x8e, 0x37, 0x48, 0x0a, 0x7b, 0x1d, 0xe1, 0xc8, 0x49, 0x2d, 0x5d, 0x5d, 0x34, 0x3c,
	0x5d, 0x0f, 0x2d, 0x77, 0xdc, 0xf8, 0xcf, 0x5e, 0x05, 0xea, 0x34, 0xdd, 0x2c, 0xbe, 0xc1, 0xe4,
	0x37, 0x00, 0x00, 0xff, 0xff, 0xdb, 0x94, 0xf6, 0x25, 0x49, 0x02, 0x00, 0x00,
}
